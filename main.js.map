{"version":3,"sources":["./src/app/components/clientes/listar/listar-cliente.component.ts","./src/app/components/clientes/listar/listar-cliente.component.html","./src/app/components/prestadores/listar/listar-prestador.component.ts","./src/app/components/prestadores/listar/listar-prestador.component.html","./src/app/model/vo/cliente.ts","./src/app/components/clientes/editar/editar-cliente.component.ts","./src/app/components/clientes/editar/editar-cliente.component.html","./src/environments/environment.ts","./src/app/services/combos/combo.service.ts","./src/app/model/enums/navigation.enum.ts","./src/app/services/prestadores/prestador-service.ts","./src/app/components/clientes/adicionar/adicionar-cliente.component.ts","./src/app/components/clientes/adicionar/adicionar-cliente.component.html","./src/app/components/ocorrencias/ocorrencias.component.ts","./src/app/components/ocorrencias/ocorrencias.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/services/clientes/cliente-service.ts","./src/app/services/ocorrencias/ocorrencia-service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/model/vo/prestador.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/components/ocorrencias/nova-ocorrencia/nova-ocorrencia.component.ts","./src/app/components/ocorrencias/nova-ocorrencia/nova-ocorrencia.component.html","./src/app/app.module.ts","./src/app/services/commons/common.service.ts","./src/app/components/prestadores/editar/editar-prestador.component.ts","./src/app/components/prestadores/editar/editar-prestador.component.html","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/model/enums/tipopessoa.enum.ts","./src/app/utils/utils.ts","./src/app/model/enums/simnao.enum.ts","./src/app/utils/message-util.ts","./src/app/components/prestadores/adicionar/adicionar-prestador.component.ts","./src/app/components/prestadores/adicionar/adicionar-prestador.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AAC7B;AAEe;;;;;;;;;;;;;ICHzD,yEAA+C;IAC3C,wEAAkB;IAAA,4EAAiB;IAAA,4DAAK;IACxC,0EAAgC;IAC9B,6EAA+G;IAAxB,oUAAuB;IAAC,4DAAS;IAC1H,4DAAO;IACX,4DAAM;;;IAIN,qEAAI;IACA,yEAAsD;IAAA,8DAAG;IAAA,4EAAoC;IAAA,4DAAK;IAClG,yEAAuD;IAAA,gEAAK;IAAA,4EAAsC;IAAA,4DAAK;IACvG,yEAAgC;IAAA,gEAAK;IAAA,4DAAK;IAC1C,yEAAyD;IAAA,mEAAO;IAAA,6EAAwC;IAAA,4DAAK;IAC7G,0EAAgC;IAAA,2EAAK;IAAA,4DAAK;IAC5C,4DAAK;;;;IAGP,qEAAI;IACA,yEAAgC;IAAA,uDAAqB;IAAA,4DAAK;IAC1D,yEAAgC;IAAA,uDAAuB;IAAA,4DAAK;IAC5D,yEAAgC;IAAA,uDAAwB;IAAA,4DAAK;IAC7D,yEAAgC;IAAA,uDAA2B;IAAA,4DAAK;IAChE,yEAAiC;IAC7B,8EAAwH;IAA3B,+WAAyB;IAAE,4DAAS;IACjI,8EAA+G;IAA3B,kXAA0B;IAAC,4DAAS;IAC5H,4DAAK;IACT,4DAAK;;;IAR+B,0DAAqB;IAArB,qFAAqB;IACrB,0DAAuB;IAAvB,uFAAuB;IACvB,0DAAwB;IAAxB,wFAAwB;IACxB,0DAA2B;IAA3B,2FAA2B;;;IALnE,sIAWc;;;ADZf,MAAM,sBAAsB;IAUjC,YACY,mBAAwC,EACxC,cAA8B,EAC9B,YAA0B,EAC1B,aAA4B,EAC5B,cAA8B;QAJ9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAb1C,YAAO,GAAY,IAAI,CAAC;QAExB,YAAO,GAAY,EAAE,CAAC;QAEtB,aAAQ,GAAc,EAAE,CAAC;QAEzB,aAAQ,GAAG,KAAK,CAAC;IAQb,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,EAAE;IACf,CAAC;IAGD,MAAM,CAAC,OAAgB;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,kFAAc,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;IAC/F,CAAC;IAED,OAAO,CAAC,OAAgB;QAClB,IAAI,SAAS,GAAY,OAAO,CAAC,SAAS;QAC1C,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC7B,OAAO,EAAE,2CAA2C,GAAG,OAAO,CAAC,WAAW,GAAG,IAAI;YACjF,MAAM,EAAE,aAAa;YACrB,IAAI,EAAE,mBAAmB;YACzB,MAAM,EAAE,GAAG,EAAE;gBACX,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YACjC,CAAC;YACD,GAAG,EAAE,gBAAgB;SACxB,CAAC,CAAC;IACT,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,kFAAc,CAAC,kBAAkB,CAAC;IAChE,CAAC;IAAA,CAAC;IAEF,cAAc,CAAC,SAAiB;QAC9B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC5D,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,gBAAgB,CAAC,uCAAuC,CAAC,CAAC,CAAC;QACjG,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAClB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9D,CAAC,CACF,CAAC;IACJ,CAAC;IAAA,CAAC;IAEF,MAAM;QACJ,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,SAAS,CAClC,CAAC,IAAe,EAAE,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CACF,CAAC;IACJ,CAAC;;4FAnEU,sBAAsB;sGAAtB,sBAAsB,+GAFtB,CAAC,+DAAmB,EAAE,0DAAc,CAAC;QChBlD,gFAAmI;QAC3H,kIAOc;QAEd,mIAQc;QACd,kHAWc;QAClB,4DAAU;QAGd,gFASkB;QAClB,wEAAwC;;QA5C3B,+EAAkB;QAmBoB,0DAAsB;QAAtB,sFAAsB;QAgBjE,0DAAyB;QAAzB,gIAAyB;QAEzB,kFAAqB;;;;;;;;;;;;;;ACpC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAE2B;AAC7B;AAEe;;;;;;;;;;;;ICJzD,yEAA+C;IAC3C,wEAAkB;IAAA,kFAAuB;IAAA,4DAAK;IAC9C,0EAAgC;IAC9B,6EAAiH;IAA1B,wUAAyB;IAAC,4DAAS;IAC5H,4DAAO;IACX,4DAAM;;;IAIN,qEAAI;IACA,yEAAqD;IAAA,8DAAG;IAAA,4EAAoC;IAAA,4DAAK;IACjG,yEAAuD;IAAA,gEAAK;IAAA,4EAAsC;IAAA,4DAAK;IACvG,yEAAgC;IAAA,gEAAK;IAAA,4DAAK;IAC1C,yEAAyD;IAAA,mEAAO;IAAA,6EAAwC;IAAA,4DAAK;IAC7G,0EAAgC;IAAA,2EAAK;IAAA,4DAAK;IAC5C,4DAAK;;;;IAGP,qEAAI;IACA,yEAAgC;IAAA,uDAAyB;IAAA,4DAAK;IAC9D,yEAAgC;IAAA,uDAA2B;IAAA,4DAAK;IAChE,yEAAgC;IAAA,uDAA4B;IAAA,4DAAK;IACjE,yEAAgC;IAAA,uDAA+B;IAAA,4DAAK;IACpE,yEAAiC;IAC7B,8EAA0H;IAA7B,qXAA2B;IAAE,4DAAS;IACnI,8EAAiH;IAA7B,wXAA4B;IAAC,4DAAS;IAC9H,4DAAK;IACT,4DAAK;;;IAR+B,0DAAyB;IAAzB,yFAAyB;IACzB,0DAA2B;IAA3B,2FAA2B;IAC3B,0DAA4B;IAA5B,4FAA4B;IAC5B,0DAA+B;IAA/B,+FAA+B;;;IALvE,wIAWc;;;ADff,MAAM,wBAAwB;IAYnC,YACY,mBAAwC,EACxC,cAA8B,EAC9B,aAA4B,EAC5B,gBAAkC;QAHlC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAd9C,YAAO,GAAY,IAAI,CAAC;QAExB,cAAS,GAAG,IAAI,6DAAS,EAAE,CAAC;QAE5B,gBAAW,GAAgB,EAAE,CAAC;QAE9B,aAAQ,GAAG,KAAK,CAAC;QAEjB,UAAK,GAAG,CAAC,EAAE,CAAC;IAOR,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,iBAAiB,EAAE;IAC1B,CAAC;IAGD,MAAM,CAAC,oBAA+B;QACpC,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,kFAAc,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;IACtG,CAAC;IAED,OAAO,CAAC,SAAoB;QACtB,IAAI,WAAW,GAAY,SAAS,CAAC,WAAW;QAChD,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC7B,OAAO,EAAE,6CAA6C,GAAG,SAAS,CAAC,aAAa,GAAG,IAAI;YACvF,MAAM,EAAE,aAAa;YACrB,IAAI,EAAE,mBAAmB;YACzB,MAAM,EAAE,GAAG,EAAE;gBACX,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,WAAW,CAAC,CAAC;gBAC3C,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YACvC,CAAC;YACD,GAAG,EAAE,gBAAgB;SACxB,CAAC,CAAC;IACT,CAAC;IAED,aAAa;QACX,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,kFAAc,CAAC,qBAAqB,CAAC;IACnE,CAAC;IAAA,CAAC;IAEF,gBAAgB,CAAC,WAAmB;QAClC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAChE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,gBAAgB,CAAC,uCAAuC,CAAC,CAAC,CAAC;QACjG,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAClB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9D,CAAC,CACF,CAAC;IACJ,CAAC;IAAA,CAAC;IAEF,iBAAiB;QACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,SAAS,CACpC,CAAC,IAAiB,EAAE,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CACF,CAAC;IACJ,CAAC;;gGAtEU,wBAAwB;wGAAxB,wBAAwB,iHAFxB,CAAC,+DAAmB,EAAE,0DAAc,CAAC;QCblD,gFAAyI;QACjI,oIAOc;QAEd,qIAQc;QACd,oHAWc;QAClB,4DAAU;QAGd,gFASkB;QAClB,wEAAwC;;QA5C3B,kFAAqB;QAmBmB,0DAAyB;QAAzB,yFAAyB;QAgBtE,0DAAyB;QAAzB,gIAAyB;QAEzB,kFAAqB;;;;;;;;;;;;;;ACjC7B;AAAA;AAAO,MAAM,OAAO;IAApB;QAEI,aAAQ,GAAc,EAAE,CAAC;QACzB,kBAAa,GAAoB,EAAE,CAAC;IAexC,CAAC;CAAA;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACY;AAEc;AAMlB;AAEX;;;;;;;;;;;;;;;;;;;ICX5B,0EAA+C;IAC3C,yEAAkB;IAAA,0EAAe;IAAA,4DAAK;IAC1C,4DAAM;;;IAaF,4EAAuE;IAAA,kGAA6B;IAAA,4DAAQ;;;IAC5G,4EAAwE;IAAA,qFAA0B;IAAA,4DAAQ;;;IAQ1G,4EAA6F;IAAA,kGAA6B;IAAA,4DAAQ;;;IAClI,4EAA8F;IAAA,qFAA0B;IAAA,4DAAQ;;;IAQhI,4EAAmG;IAAA,kGAA6B;IAAA,4DAAQ;;;IAaxI,4EAAqE;IAAA,iGAA4B;IAAA,4DAAQ;;;;IAH7G,yEAA8D;IAC1D,4EAAiB;IAAA,8DAAG;IAAA,4DAAQ;IAC5B,sFAAyH;IAAlE,yWAAgC;IAAkC,4DAAc;IACvI,8HAAyG;IAC7G,4DAAM;;;;IAFqD,0DAAgC;IAAhC,+FAAgC;IAC/D,0DAA2C;IAA3C,yGAA2C;;;IAMnE,4EAAuE;IAAA,iGAA4B;IAAA,4DAAQ;;;;IAH/G,yEAA8D;IAC1D,4EAAiB;IAAA,+DAAI;IAAA,4DAAQ;IAC7B,sFAA+H;IAAnE,yWAAgC;IAAmC,4DAAc;IAC7I,8HAA2G;IAC/G,4DAAM;;;;IAF0D,0DAAgC;IAAhC,+FAAgC;IACpE,0DAA6C;IAA7C,yGAA6C;;AD/B9E,MAAM,sBAAsB;IAgB/B,YACY,cAA8B,EAC9B,aAA4B,EAC5B,YAA0B,EAC1B,cAA8B,EAC9B,KAAqB;QAJrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QAlBjC,eAAU,GAAG,CAAC,EAAE,CAAC,CAAC;QAElB,0BAAqB,GAAG,CAAC,CAAC;QAE1B,cAAS,GAAG,CAAC,CAAC;QAEd,YAAO,GAAG,IAAI,gEAAO,EAAE;IAalB,CAAC;IAXN,QAAQ;QACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE;QACnD,IAAI,CAAC,aAAa,EAAE;IACxB,CAAC;IAWD,MAAM,CAAC,IAAa;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,QAAQ;QACL,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,kFAAc,CAAC,eAAe,CAAC;IAC9D,CAAC;IAED,gBAAgB,CAAC,KAAU;QACvB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC,KAAK,CAAC;IAC7C,CAAC;IAED,cAAc,CAAC,KAAU;QACvB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,kFAAc,CAAC,eAAe,CAAC;IAClE,CAAC;IAEO,aAAa;QACnB,IAAI,SAAS,GAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAa,EAAE,EAAE;YAC/D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,SAAS,GAAY,IAAI,CAAC,SAAS;YACxC,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,2DAAK,CAAC,OAAO,CAAU,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;QAC1F,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9D,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,aAAa,CAAC,IAAY;QAChC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC7D,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,gBAAgB,CAAC,sCAAsC,CAAC,CAAC,CAAC;QACnG,CAAC,EAAC,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,SAAS,CAAC,IAAY;QAC1B,IAAI,OAAO,GAAY,EAAE,CAAC;QAC1B,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACrD,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACxC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC/C,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB;QAC1D,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;QACrC,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;QACrD,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QACnF,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC;QAC/D,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;QACnD,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC9C,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QAC3C,OAAO,OAAO,CAAC;IAClB,CAAC;IAEO,gBAAgB,CAAC,IAAY;QAClC,IAAI,QAAQ,GAAa,EAAE,CAAC;QAC5B,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;QACzC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;QACnC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;QACnC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;QACnC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;QAC7B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACpC,QAAQ,CAAC,IAAI,GAAG,QAAQ;QACxB,OAAO,QAAQ,CAAC;IACnB,CAAC;IAEO,iBAAiB,CAAC,IAAY;QACpC,IAAI,aAAa,GAAmB,EAAE,CAAC;QACvC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC1C,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC9C,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACvC,aAAa,CAAC,MAAM,GAAG,CAAC;QACxB,OAAO,aAAa,CAAC;IACvB,CAAC;IAEO,MAAM,CAAC,IAAY;QACxB,IAAI,CAAC,SAAS,EAAE,CAAC;IACpB,CAAC;;4FAvGO,sBAAsB;sGAAtB,sBAAsB,+GAFtB,CAAC,0DAAc,CAAC;;QCtB7B,yEAAuB;QACnB,0EAAS;QACL,kIAIc;QAClB,4DAAU;QACd,4DAAM;QAEN,yEAAiD;QAE7C,6EAAkG;QAAjC,+RAAY,eAAmB,IAAC;QAE7F,yEAAuC;QACnC,yEAA2B;QACvB,2EAA2B;QAAA,+DAAI;QAAA,4DAAQ;QACvC,+EAAkJ;QAA3D,wMAAiC;QAAxH,4DAAkJ;QAClJ,yHAA4G;QAC5G,yHAA0G;QAC9G,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAgB;QAAA,iFAAgB;QAAA,4DAAQ;QACxC,iFAAoK;QAA/D,4MAAqC;QAA1I,4DAAoK;QACpK,yHAAkI;QAClI,yHAAgI;QACpI,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAgB;QAAA,6FAAuB;QAAA,4DAAQ;QAC/C,iFAA2K;QAAnD,+MAAwC;QAAhK,4DAA2K;QAC3K,yHAAwI;QAC5I,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAwB;QAAA,uEAAW;QAAA,4DAAQ;QAC3C,kFAAuJ;QAA1E,+MAAmC,uGAAa,4BAAwB,IAArC;QAAuC,4DAAa;QACxK,4DAAM;QAEN,qHAIM;QAEN,qHAIM;QAEN,0EAA2B;QACvB,6EAAkC;QAAA,yFAAmB;QAAA,4DAAQ;QAC7D,qFAAqJ;QAA3C,yNAA0C;QAAC,4DAAgB;QACzK,4DAAM;QAEV,4DAAM;QAEN,0EAAuC;QACnC,2EAA8B;QAC1B,6EAAkB;QAAA,yEAAQ;QAAA,4DAAQ;QAClC,6EAA0G;QAA5C,gNAA0C;QAAxG,4DAA0G;QAC9G,4DAAM;QACN,2EAA8B;QAC1B,6EAAoB;QAAA,uEAAM;QAAA,4DAAQ;QAClC,6EAAmG;QAAzC,4MAAsC;QAAhG,4DAAmG;QACvG,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,2EAA6B;QACzB,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,6EAAiG;QAAzC,4MAAsC;QAA9F,4DAAiG;QACrG,4DAAM;QAEN,2EAA6B;QACzB,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,6EAAgG;QAAxC,4MAAsC;QAA9F,4DAAgG;QACpG,4DAAM;QAEN,2EAA6B;QACzB,6EAAiB;QAAA,+DAAG;QAAA,4DAAQ;QAC5B,mFAAsF;QAApC,+MAAmC;QAAC,4DAAc;QACxG,4DAAM;QAEN,0EAA2B;QACzB,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,6EAAgG;QAAxC,4MAAsC;QAA9F,4DAAgG;QACpG,4DAAM;QACR,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,qFAA0H;QAA9C,2NAA6C;QAAC,4DAAgB;QAC9I,4DAAM;QAEN,0EAA2B;QACvB,6EAAqB;QAAA,wEAAO;QAAA,4DAAQ;QACpC,qFAAgI;QAAhD,6NAA+C;QAAC,4DAAgB;QACpJ,4DAAM;QAEN,0EAA2B;QACvB,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,qFAAuH;QAA3C,wNAA0C;QAAC,4DAAgB;QAC3I,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,2EAA6B;QACzB,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,mFAAwG;QAAtC,kNAAqC;QAAC,4DAAc;QAC1H,4DAAM;QACN,0EAA2B;QACvB,6EAAmB;QAAA,kEAAM;QAAA,4DAAQ;QACjC,6EAAyF;QAAnC,yMAAkC;QAAxF,4DAAyF;QAC7F,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAmB;QAAA,iFAAW;QAAA,4DAAQ;QACtC,gFAA2G;QAAxC,iNAAuC;QAAC,4DAAW;QAC1H,4DAAM;QACV,4DAAM;QAGN,wEAAuB;QAEvB,2EAAiD;QAC7C,2EAA6B;QACzB,8EAAyG;QAArB,+IAAS,cAAU,IAAC;QAAC,4DAAS;QACtH,4DAAM;QAEN,2EAA6B;QACzB,yEAA4H;QAChI,4DAAM;QACV,4DAAM;QAEV,4DAAO;QAEX,4DAAM;QAEN,+EAAiE;QAAnC,0JAAW,0BAAsB,IAAC;QAAC,4DAAU;;;;;;QArI4B,2DAAiC;QAAjC,4FAAiC;QAChG,0DAA6C;QAA7C,uGAA6C;QAC7C,0DAA8C;QAA9C,wGAA8C;QAO+B,0DAAqC;QAArC,gGAAqC;QAClH,0DAAmE;QAAnE,uGAAmE;QACnE,0DAAoE;QAApE,wGAAoE;QAO4B,0DAAwC;QAAxC,mGAAwC;QACxI,0DAAyE;QAAzE,uGAAyE;QAOrF,0DAAsB;QAAtB,mFAAsB;QAGV,0DAAgC;QAAhC,gGAAgC;QAMhC,0DAAgC;QAAhC,gGAAgC;QAQ4B,0DAAqB;QAArB,8EAAqB;QAQ3C,0DAA0C;QAA1C,oGAA0C;QAI9C,0DAAsC;QAAtC,gGAAsC;QAOxC,0DAAsC;QAAtC,gGAAsC;QAKtC,0DAAsC;QAAtC,gGAAsC;QAK5C,0DAAmC;QAAnC,6FAAmC;QAK/B,0DAAsC;QAAtC,gGAAsC;QAOtC,0DAAqB;QAArB,8EAAqB;QAKjB,0DAAqB;QAArB,8EAAqB;QAKzB,0DAAqB;QAArB,8EAAqB;QAOT,0DAAqC;QAArC,gGAAqC;QAIjD,0DAAkC;QAAlC,6FAAkC;QAO3D,0DAAU;QAAV,mEAAU;QAamB,0DAA+B;QAA/B,gFAA+B;;;;;;;;;;;;;;AC9IzG;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,uCAAuC;CACjD,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA6D;AACQ;;AAM9D,MAAM,YAAY;IAErB,gBAAgB;QACZ,OAAO,CAAC,EAAE,KAAK,EAAE,0EAAU,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,0EAAU,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,0EAAU,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,0EAAU,CAAC,KAAK,CAAC,EAAE,CAAC;IACnH,CAAC;IAED,aAAa;QACT,OAAO,CAAC,EAAE,KAAK,EAAE,kFAAc,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,kFAAc,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,kFAAc,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,kFAAc,CAAC,UAAU,CAAC,EAAE,CAAC;IAC3I,CAAC;;wEARQ,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFT,MAAM;;;;;;;;;;;;;ACNtB;AAAA;AAAA,IAAY,cASX;AATD,WAAY,cAAc;IACtB,+CAA6B;IAC7B,uDAAqC;IACrC,uDAAqC;IACrC,qDAAmC;IACnC,6DAA2C;IAC3C,6DAA2C;IAC3C,qDAAmC;IACnC,uDAAqC;AACzC,CAAC,EATW,cAAc,KAAd,cAAc,QASzB;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkF;AAChC;AACC;AAGX;;;AAKjC,MAAM,gBAAgB;IAEzB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAE1C,aAAQ,GAAW,2DAAK,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAEtD,SAAI,GAAG,EAAE;QAET,UAAU;QACV,gBAAW,GAAG;YACV,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SACnE;IAT6C,CAAC;IAY/C,IAAI;QACA,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACvG,CAAC;IAED,QAAQ,CAAC,EAAU;QACjB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC;QACrC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAClG,CAAC;IAED,MAAM,CAAC,SAAoB;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAClH,CAAC;IAED,MAAM,CAAC,SAAoB;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACvH,CAAC;IAED,MAAM,CAAC,EAAU;QACf,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1F,CAAC;IAEO,SAAS,CAAC,SAAoB;;QACnC,IAAI,IAAI,GAAG;YACV,WAAW,EAAE,SAAS,CAAC,SAAS;YAChC,QAAQ,QAAE,SAAS,CAAC,QAAQ,0CAAE,MAAM;YACpC,cAAc,EAAE,SAAS,CAAC,YAAY;YACtC,KAAK,QAAE,SAAS,CAAC,QAAQ,0CAAE,GAAG;YAC9B,QAAQ,QAAE,SAAS,CAAC,QAAQ,0CAAE,MAAM;YACpC,YAAY,QAAE,SAAS,CAAC,aAAa,0CAAE,UAAU;YACjD,UAAU,QAAE,SAAS,CAAC,aAAa,0CAAE,QAAQ;YAC7C,wBAAwB,EAAE,CAAC;YAC3B,uBAAuB,EAAE,CAAC;YAC1B,aAAa,EAAE,QAAQ;YACvB,OAAO,QAAE,SAAS,CAAC,aAAa,0CAAE,KAAK;YACvC,QAAQ,QAAE,SAAS,CAAC,aAAa,0CAAE,MAAM;YACzC,gBAAgB,EAAE,SAAS,CAAC,cAAc;YAC1C,eAAe,EAAE,SAAS,CAAC,aAAa;YACxC,QAAQ,QAAE,SAAS,CAAC,QAAQ,0CAAE,MAAM;YACpC,eAAe,EAAE,EAAE;YACnB,YAAY,QAAE,SAAS,CAAC,QAAQ,0CAAE,UAAU;YAC5C,eAAe,EAAE,SAAS,CAAC,aAAa;YACxC,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,SAAS,CAAC,MAAM;YAC1B,QAAQ,EAAE,SAAS,CAAC,MAAM;YAC1B,OAAO,EAAG,SAAS,CAAC,KAAK;YACzB,QAAQ,QAAE,SAAS,CAAC,QAAQ,0CAAE,MAAM;YACpC,aAAa,EAAG,EAAE;YAClB,MAAM,QAAE,SAAS,CAAC,QAAQ,0CAAE,IAAI;YAChC,aAAa,EAAG,SAAS,CAAC,WAAW;YACrC,mBAAmB,EAAG,OAAO;YAC7B,mBAAmB,EAAG,SAAS,CAAC,iBAAiB;SACjD;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;IACf,CAAC;IAED,uBAAuB;IACvB,WAAW,CAAC,KAAwB;QAClC,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACnC,YAAY,GAAI,KAAK,CAAC,KAAK,CAAC,OAAO;SACtC;aAAM;YACH,YAAY,GAAI,KAAK,CAAC,OAAO;SAChC;QACD,OAAO,uDAAU,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;;gFAlFQ,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFb,MAAM;;;;;;;;;;;;;ACNtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACY;AAEc;;;;;;;;;;;;;;;;;;ICHzD,0EAA+C;IAC3C,yEAAkB;IAAA,+EAAoB;IAAA,4DAAK;IAC/C,4DAAM;;;IAaF,4EAAuE;IAAA,kGAA6B;IAAA,4DAAQ;;;IAC5G,4EAAwE;IAAA,qFAA0B;IAAA,4DAAQ;;;IAQ1G,4EAA6F;IAAA,kGAA6B;IAAA,4DAAQ;;;IAClI,4EAA8F;IAAA,qFAA0B;IAAA,4DAAQ;;;IAQhI,4EAAmG;IAAA,kGAA6B;IAAA,4DAAQ;;;IAaxI,4EAAqE;IAAA,iGAA4B;IAAA,4DAAQ;;;IAH7G,yEAA8D;IAC1D,4EAAiB;IAAA,8DAAG;IAAA,4DAAQ;IAC5B,iFAA8G;IAC9G,iIAAyG;IAC7G,4DAAM;;;IAF6D,0DAAiB;IAAjB,0EAAiB;IACxD,0DAA2C;IAA3C,yGAA2C;;;IAMnE,4EAAuE;IAAA,iGAA4B;IAAA,4DAAQ;;;IAH/G,yEAA8D;IAC1D,4EAAiB;IAAA,+DAAI;IAAA,4DAAQ;IAC7B,iFAAoH;IACpH,iIAA2G;IAC/G,4DAAM;;;IAFkE,0DAAiB;IAAjB,0EAAiB;IAC7D,0DAA6C;IAA7C,yGAA6C;;ADlC9E,MAAM,yBAAyB;IAalC,YACY,cAA8B,EAC9B,aAA4B,EAC5B,YAA0B,EAC1B,cAA8B;QAH9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAd1C,eAAU,GAAG,CAAC,EAAE,CAAC,CAAC;QAElB,0BAAqB,GAAG,CAAC,CAAC;QAE1B,YAAO,GAAY,EAAE;IAWhB,CAAC;IATN,QAAQ;QACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;IACxD,CAAC;IAUD,MAAM,CAAC,IAAa;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,QAAQ;QACL,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,kFAAc,CAAC,eAAe,CAAC;IAC9D,CAAC;IAED,gBAAgB,CAAC,KAAU;QACvB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC,KAAK,CAAC;IAC7C,CAAC;IAEO,gBAAgB,CAAC,IAAY;QACjC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC7D,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,gBAAgB,CAAC,sCAAsC,CAAC,CAAC,CAAC;QACjG,CAAC,EAAC,KAAK,CAAC,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9D,CAAC,EAAC,GAAG,EAAE;YACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CACF,CAAC;IACH,CAAC;IAEI,SAAS,CAAC,IAAY;QAC1B,IAAI,OAAO,GAAY,EAAE,CAAC;QAC1B,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACrD,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACxC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC/C,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB;QAC1D,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;QACrC,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;QACrD,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QACnF,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC;QAC/D,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;QACnD,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC9C,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QAC3C,OAAO,OAAO,CAAC;IAClB,CAAC;IAEO,gBAAgB,CAAC,IAAY;QAClC,IAAI,QAAQ,GAAa,EAAE,CAAC;QAC5B,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;QACzC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;QACnC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;QACnC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;QACnC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;QAC7B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACpC,QAAQ,CAAC,IAAI,GAAG,QAAQ;QACxB,OAAO,QAAQ,CAAC;IACnB,CAAC;IAEO,iBAAiB,CAAC,IAAY;QACpC,IAAI,aAAa,GAAmB,EAAE,CAAC;QACvC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC1C,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC9C,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACvC,aAAa,CAAC,MAAM,GAAG,CAAC;QACxB,OAAO,aAAa,CAAC;IACvB,CAAC;IAEO,MAAM,CAAC,IAAY;QACxB,IAAI,CAAC,SAAS,EAAE,CAAC;IACpB,CAAC;;kGApFO,yBAAyB;yGAAzB,yBAAyB,kHAFzB,CAAC,0DAAc,CAAC;;QCnB7B,yEAAuB;QACnB,0EAAS;QACL,qIAIc;QAClB,4DAAU;QACd,4DAAM;QAEN,yEAAiD;QAE7C,6EAA0F;QAA7B,kSAAY,eAAe,IAAC;QAErF,yEAAuC;QACnC,yEAA2B;QACvB,2EAA2B;QAAA,+DAAI;QAAA,4DAAQ;QACvC,0EAAwH;QACxH,4HAA4G;QAC5G,4HAA0G;QAC9G,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAgB;QAAA,iFAAgB;QAAA,4DAAQ;QACxC,4EAAgJ;QAChJ,4HAAkI;QAClI,4HAAgI;QACpI,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAgB;QAAA,6FAAuB;QAAA,4DAAQ;QAC/C,4EAAyJ;QACzJ,4HAAwI;QAC5I,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAwB;QAAA,uEAAW;QAAA,4DAAQ;QAC3C,kFAAuJ;QAA1E,kNAAmC,0GAAa,4BAAwB,IAArC;QAAuC,4DAAa;QACxK,4DAAM;QAEN,wHAIM;QAEN,wHAIM;QAEN,0EAA2B;QACvB,6EAAkC;QAAA,yFAAmB;QAAA,4DAAQ;QAC7D,gFAAkI;QACtI,4DAAM;QAEV,4DAAM;QAEN,0EAAuC;QACnC,2EAA8B;QAC1B,6EAAkB;QAAA,yEAAQ;QAAA,4DAAQ;QAClC,wEAAuE;QAC3E,4DAAM;QACN,2EAA8B;QAC1B,6EAAoB;QAAA,uEAAM;QAAA,4DAAQ;QAClC,wEAAoE;QACxE,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,2EAA6B;QACzB,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,wEAAkE;QACtE,4DAAM;QAEN,2EAA6B;QACzB,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,wEAAiE;QACrE,4DAAM;QAEN,2EAA6B;QACzB,6EAAiB;QAAA,+DAAG;QAAA,4DAAQ;QAC5B,8EAAwE;QAC5E,4DAAM;QAEN,0EAA2B;QACzB,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,wEAAiE;QACrE,4DAAM;QACR,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,gFAAoG;QACxG,4DAAM;QAEN,0EAA2B;QACvB,6EAAqB;QAAA,wEAAO;QAAA,4DAAQ;QACpC,gFAAwG;QAC5G,4DAAM;QAEN,0EAA2B;QACvB,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,gFAAoG;QACxG,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,2EAA6B;QACzB,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,8EAAwF;QAC5F,4DAAM;QAEN,0EAA2B;QACvB,6EAAmB;QAAA,kEAAM;QAAA,4DAAQ;QACjC,wEAA8D;QAClE,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAmB;QAAA,iFAAW;QAAA,4DAAQ;QACtC,2EAAsF;QAC1F,4DAAM;QACV,4DAAM;QAGN,wEAAuB;QAEvB,2EAAiD;QAC7C,2EAA6B;QACzB,8EAAyG;QAArB,kJAAS,cAAU,IAAC;QAAC,4DAAS;QACtH,4DAAM;QAEN,2EAA6B;QACzB,yEAAwH;QAC5H,4DAAM;QACV,4DAAM;QAEV,4DAAO;QAEX,4DAAM;QAEN,0EAAwC;;;;;;QArIA,2DAA6C;QAA7C,uGAA6C;QAC7C,0DAA8C;QAA9C,wGAA8C;QAQ9C,0DAAmE;QAAnE,uGAAmE;QACnE,0DAAoE;QAApE,wGAAoE;QAQpE,0DAAyE;QAAzE,uGAAyE;QAOrF,0DAAsB;QAAtB,mFAAsB;QAGV,0DAAgC;QAAhC,gGAAgC;QAMhC,0DAAgC;QAAhC,gGAAgC;QAQ4B,0DAAqB;QAArB,8EAAqB;QAyCnD,2DAAqB;QAArB,8EAAqB;QAKjB,0DAAqB;QAArB,8EAAqB;QAKzB,0DAAqB;QAArB,8EAAqB;QAmB9C,2DAAU;QAAV,mEAAU;QAamB,0DAA2B;QAA3B,gFAA2B;;;;;;;;;;;;;;AC9IrG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAGS;;;;;;;;;ICD9C,yEAA+C;IAC3C,wEAAkB;IAAA,oFAAoB;IAAA,4DAAK;IAC3C,0EAAgC;IAC9B,4EAA2G;IAApB,8TAAmB;IAAC,4DAAS;IACtH,4DAAO;IACX,4DAAM;;;IAIN,qEAAI;IACA,wEAAqD;IAAA,iEAAM;IAAA,4EAAoC;IAAA,4DAAK;IACpG,yEAAyD;IAAA,kEAAO;IAAA,4EAAwC;IAAA,4DAAK;IAC7G,yEAAuD;IAAA,oEAAS;IAAA,4EAAsC;IAAA,4DAAK;IAC3G,0EAAuD;IAAA,uEAAW;IAAA,6EAAsC;IAAA,4DAAK;IAC7G,0EAAgC;IAAA,2EAAK;IAAA,4DAAK;IAC5C,4DAAK;;;IAIP,qEAAI;IACA,yEAAgC;IAAA,uDAA2B;IAAA,4DAAK;IAChE,yEAAgC;IAAA,uDAA+B;IAAA,4DAAK;IACpE,yEAAgC;IAAA,qEAAU;IAAA,4DAAK;IAC/C,yEAAgC;IAAA,qEAAU;IAAA,4DAAK;IAC/C,yEAAiC;IAC7B,yEAAuG;IACvG,yEAA8F;IAClG,4DAAK;IACT,4DAAK;;;IAR+B,0DAA2B;IAA3B,2FAA2B;IAC3B,0DAA+B;IAA/B,+FAA+B;;;IAHvE,oIAWc;;ADpBX,MAAM,oBAAoB;IAS/B,YAAoB,cAA8B,EAAU,iBAAoC;QAA5E,mBAAc,GAAd,cAAc,CAAgB;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAPhG,WAAM,GAAY,KAAK,CAAC;QAExB,eAAU,GAAe,EAAE,CAAC;QAE5B,gBAAW,GAAiB,EAAE,CAAC;IAGqE,CAAC;IAGrG,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE;IAC1B,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAAA,CAAC;IAEF,iBAAiB;QACf,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,SAAS,CACrC,CAAC,IAAkB,EAAE,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACnB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9D,CAAC,CACF,CAAC;IACJ,CAAC;;wFA9BU,oBAAoB;oGAApB,oBAAoB,gHAFpB,CAAC,0DAAc,CAAC;QCV7B,gFAAmH;QAE/G,gIAOc;QAEd,iIAQc;QAEd,gHAWc;QAElB,4DAAU;;QAlCG,kFAAqB;QAqBgB,0DAAyB;QAAzB,yFAAyB;;;;;;;;;;;;;;ACpB3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;;;;;;;;ICEjC,0EAA+C;IAC3C,yEAAkB;IAAA,oEAAS;IAAA,4DAAK;IACpC,4DAAM;;;;;ADMT,MAAM,kBAAkB;IAc7B,YACU,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAH5C,gBAAW,GAAgB,EAAE,CAAC;IAI3B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG;YACrB,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,QAAQ,EAAE;gBACN;oBACI,KAAK,EAAE,QAAQ;oBACf,eAAe,EAAE,SAAS;oBAC1B,IAAI,EAAE,CAAC,IAAI,CAAC;iBACf;gBACD;oBACI,KAAK,EAAE,UAAU;oBACjB,eAAe,EAAE,SAAS;oBAC1B,IAAI,EAAE,CAAC,IAAI,CAAC;iBACf;aACJ;SACH,CAAC;QAEF,IAAI,CAAC,YAAY,GAAG;YACnB,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,QAAQ,EAAE;gBACN;oBACI,KAAK,EAAE,QAAQ;oBACf,eAAe,EAAE,SAAS;oBAC1B,IAAI,EAAE,CAAC,IAAI,CAAC;iBACf;gBACD;oBACI,KAAK,EAAE,UAAU;oBACjB,eAAe,EAAE,SAAS;oBAC1B,IAAI,EAAE,CAAC,IAAI,CAAC;iBACf;aACJ;SACH,CAAC;QAEF,IAAI,CAAC,YAAY,GAAG;YACnB,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,QAAQ,EAAE;gBACN;oBACI,KAAK,EAAE,QAAQ;oBACf,eAAe,EAAE,SAAS;oBAC1B,IAAI,EAAE,CAAC,IAAI,CAAC;iBACf;gBACD;oBACI,KAAK,EAAE,UAAU;oBACjB,eAAe,EAAE,SAAS;oBAC1B,IAAI,EAAE,CAAC,IAAI,CAAC;iBACf;aACJ;SACF,CAAC;QAEF,IAAI,CAAC,eAAe,GAAG;YACrB,MAAM,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;YACrI,QAAQ,EAAE;gBACN;oBACI,KAAK,EAAE,qBAAqB;oBAC5B,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;oBACvD,IAAI,EAAE,KAAK;oBACX,WAAW,EAAE,SAAS;iBACzB;gBACD;oBACI,KAAK,EAAE,sBAAsB;oBAC7B,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAC,EAAE,EAAE,CAAC,CAAC;oBACnD,IAAI,EAAE,IAAI;oBACV,WAAW,EAAE,SAAS;oBACtB,eAAe,EAAE,sBAAsB;iBAC1C;aACJ;SACJ;QAEC,IAAI,CAAC,OAAO,GAAG;YACb,KAAK,EAAE;gBACH,OAAO,EAAE,KAAK;aACjB;YACD,MAAM,EAAE;gBACJ,QAAQ,EAAE,QAAQ;aACrB;SAEF;IAMD,CAAC;;oFApGY,kBAAkB;kGAAlB,kBAAkB,oHAFlB,CAAC,0DAAc,CAAC;QCT/B,yEAAuB;QACnB,0EAAS;QACL,8HAIc;QAClB,4DAAU;QACd,4DAAM;QAEN,yEAAiD;QAC7C,yEAAoB;QAChB,yEAAmB;QACf,4EAA4E;QACxE,yEAAoB;QAChB,yEAAmB;QACf,wEAAwG;QAC5G,4DAAM;QACV,4DAAM;QACV,4DAAS;QACb,4DAAM;QACV,4DAAM;QAEN,0EAAoB;QAChB,0EAAmB;QACf,6EAA4E;QACxE,0EAAoB;QAChB,0EAAmB;QACf,yEAAuG;QAC3G,4DAAM;QACV,4DAAM;QACV,4DAAS;QACb,4DAAM;QAEN,0EAAmB;QACf,6EAAyE;QACjE,0EAAoB;QAChB,0EAAmB;QACf,yEAAoG;QACxG,4DAAM;QACV,4DAAM;QACd,4DAAS;QACb,4DAAM;QAEN,0EAAmB;QACf,8EAAyE;QACrE,0EAAoB;QAChB,0EAAmB;QACf,yEAAoG;QACxG,4DAAM;QACV,4DAAM;QACV,4DAAS;QACb,4DAAM;QACT,4DAAM;QACX,4DAAM;;QAzCmC,0DAA8C;QAA9C,gIAA8C;QAGd,0DAAwB;QAAxB,qFAAwB;QASxD,0DAA8C;QAA9C,gIAA8C;QAGf,0DAAwB;QAAxB,qFAAwB;QAO1D,0DAA8C;QAA9C,gIAA8C;QAGR,0DAAqB;QAArB,kFAAqB;QAO3D,0DAA8C;QAA9C,gIAA8C;QAGZ,0DAAqB;QAArB,kFAAqB;;;;;;;;;;;;;AChlSA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkF;AAChC;AACC;AAGX;;;AAMjC,MAAM,cAAc;IAEvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAE1C,aAAQ,GAAW,2DAAK,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAEpD,SAAI,GAAG,EAAE;QAET,UAAU;QACV,gBAAW,GAAG;YACV,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SACnE;IAT6C,CAAC;IAY/C,IAAI;QACA,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACrG,CAAC;IAED,QAAQ,CAAC,EAAU;QACjB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC;QACrC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,MAAM,CAAC,OAAgB;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAClH,CAAC;IAED,MAAM,CAAC,OAAgB;QACrB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC;QACpD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC3G,CAAC;IAED,MAAM,CAAC,EAAU;QACf,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC;QACrC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1F,CAAC;IAEO,SAAS,CAAC,OAAgB;QAC/B,IAAI,IAAI,GAAG;YACV,wBAAwB,EAAE,CAAC;YAC3B,uBAAuB,EAAE,CAAC;YAC1B,cAAc,EAAE,OAAO,CAAC,aAAa;YACrC,cAAc,EAAE,OAAO,CAAC,YAAY;YACpC,UAAU,EAAG,OAAO,CAAC,QAAQ;YAC7B,oBAAoB,EAAE,OAAO,CAAC,kBAAkB;YAChD,aAAa,EAAG,OAAO,CAAC,WAAW;YACnC,iBAAiB,EAAE,OAAO,CAAC,eAAe;YAC1C,YAAY,EAAG,OAAO,CAAC,UAAU;YACjC,mBAAmB,EAAE,OAAO,CAAC,iBAAiB;YAC9C,iBAAiB,EAAG,OAAO;YAC3B,iBAAiB,EAAG,OAAO,CAAC,eAAe;YAC3C,YAAY,EAAG,OAAO,CAAC,UAAU;SACjC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;IACf,CAAC;IAED,uBAAuB;IACvB,WAAW,CAAC,KAAwB;QAClC,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACnC,YAAY,GAAI,KAAK,CAAC,KAAK,CAAC,OAAO;SACtC;aAAM;YACH,YAAY,GAAI,KAAK,CAAC,OAAO;SAChC;QACD,OAAO,uDAAU,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;;4EApEQ,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFX,MAAM;;;;;;;;;;;;;ACVtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkF;AAEpC;AACM;AAEZ;;;AAMjC,MAAM,iBAAiB;IAI1B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAF1C,SAAI,GAAG,EAAE;QAIT,aAAQ,GAAW,2DAAK,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAExD,UAAU;QACV,gBAAW,GAAG;YACV,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SACnE;IAP6C,CAAC;IAU/C,IAAI;QACA,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAe,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxG,CAAC;IAED,MAAM,CAAC,SAAqB;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAClH,CAAC;IAEH,uBAAuB;IACvB,WAAW,CAAC,KAAwB;QAChC,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACnC,YAAY,GAAI,KAAK,CAAC,KAAK,CAAC,OAAO;SACtC;aAAM;YACH,YAAY,GAAI,KAAK,CAAC,OAAO;SAChC;QACD,OAAO,uDAAU,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAEO,SAAS,CAAC,SAAqB;QACrC,IAAI,IAAI,GAAG,EACV;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;IACf,CAAC;;kFAvCO,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAHd,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICRtB,wEAAkD;;;IAMtC,gEAAI;IAAA,gEAAI;;;;IALpB,yEAAoD;IAChD,yEAAmD;IACjD,yEAAsB;IACpB,4EAAW;IACT,8HAEc;IACd,8HACY;IAChB,4DAAY;IACZ,4DAAM;IACV,4DAAM;IACR,4DAAM;;ACLC,MAAM,YAAY;IAMvB,YACU,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QALtC,UAAK,GAAG,cAAc,CAAC;QAEvB,YAAO,GAAG,KAAK,CAAC;IAId,CAAC;IAEH,cAAc;QACZ,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QAC1C,OAAO,KAAK,KAAK,QAAQ,CAAC;IAC5B,CAAC;;wEAbU,YAAY;4FAAZ,YAAY;QDRzB,sHAAkD;QAClD,wGAYM;QAGN,0EAAS;QACP,yEAAuB;QACrB,2EAA+B;QACjC,4DAAM;QACR,4DAAU;QAEV,4EAA+B;QAC7B,yEAAuB;QACrB,uEAAsC;QAAA,gFAAqB;QAAA,4DAAI;QACjE,4DAAM;QACR,4DAAS;;QA1BI,sFAAsB;QACR,0DAAuB;QAAvB,uFAAuB;;;;;;;;;;;;;;AEElD;AAAA;AAAO,MAAM,SAAS;IAAtB;QACE,gBAAW,GAAY,CAAC,CAAC;QACzB,kBAAa,GAAoB,EAAE,CAAC;QACpC,aAAQ,GAAc,EAAE,CAAC;QACzB,kBAAa,GAAY,EAAE,CAAC;QAC5B,WAAM,GAAW,EAAE,CAAC;QACpB,UAAK,GAAW,EAAE,CAAC;QACnB,WAAM,GAAW,EAAE,CAAC;QACpB,iBAAY,GAAY,EAAE,CAAC;QAC3B,sBAAiB,GAAY,EAAE,CAAC;QAChC,mBAAc,GAAY,EAAE,CAAC;QAI7B,gBAAW,GAAY,EAAE,CAAC;QAC1B,kBAAa,GAAY,EAAE,CAAC;QAC5B,sBAAiB,GAAY,EAAE,CAAC;QAChC,0BAAqB,GAAY,CAAC,CAAC;QAEnC,2BAAsB,GAAY,CAAC,CAAC;QACpC,kBAAa,GAAa,EAAE,CAAC;IAC/B,CAAC;CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICZmC,0EAA+C;IAC3C,yEAAkB;IAAA,yFAAyB;IAAA,4DAAK;IACpD,4DAAM;;;IAJd,0EAAS;IACL,yIAIc;IAClB,4DAAU;;ACR/B,MAAM,cAAc;IAL3B;QAOI,UAAK,GAAe,EAAE,CAAC;QAMvB,UAAK,GAAG,cAAc,CAAC;KAC1B;IALG,QAAQ;IAER,CAAC;;4EANQ,cAAc;8FAAd,cAAc;QDR3B,yEAAgD;QAC5C,yEAAuC;QACnC,oEAEM;QACN,yEAAiC;QAC7B,yEAAiB;QACb,6EAA6D;QACzD,yEAAQ;QACJ,0HAQc;QAEV,yEAA2D;QACvD,0EAAqB;QACjB,0EAAqB;QACjB,6EAAsB;QAAA,wEAAO;QAAA,4DAAQ;QACrC,2EAA0B;QACtB,4EAAiC;QAAA,oEAA0B;QAAA,4DAAO;QAClE,4EAAiG;QACrG,4DAAM;QACV,4DAAM;QACN,0EAAqB;QACjB,6EAAsB;QAAA,iEAAK;QAAA,4DAAQ;QACnC,2EAA0B;QACtB,4EAAiC;QAAA,oEAAgC;QAAA,4DAAO;QACxE,4EAAkG;QACtG,4DAAM;QACV,4DAAM;QACN,0EAAqB;QACjB,yEAA0E;QAC9E,4DAAM;QAEN,0EAAqB;QACjB,yEAAiF;QACrF,4DAAM;QACV,4DAAM;QACV,4DAAM;QACd,4DAAS;QACb,4DAAO;QACX,4DAAM;QACV,4DAAM;QACN,qEAEM;QACV,4DAAM;QACV,4DAAM;;;;;;;;;;;;;;AElDN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAKS;;;;;;;;;;;;ICJ1C,0EAA+C;IAC3C,yEAAkB;IAAA,sFAAsB;IAAA,4DAAK;IACjD,4DAAM;;ADUX,MAAM,uBAAuB;IASlC,YAAoB,cAA8B,EAAU,aAA4B,EAAU,YAA0B,EAAU,iBAAoC;QAAtJ,mBAAc,GAAd,cAAc,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAP1K,eAAU,GAAe,EAAE,CAAC;QAE5B,gBAAW,GAAiB,EAAE,CAAC;QAE/B,UAAK,GAAG,CAAC,EAAE,CAAC;IAGkK,CAAC;IAE/K,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE;IACvB,CAAC;IAED,MAAM,CAAC,IAAY;QACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEM,mBAAmB,CAAC,IAAY;QACvC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACnE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC,CAAC;QAClF,CAAC,EAAC,KAAK,CAAC,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9D,CAAC,EAAC,GAAG,EAAE;YACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CACF,CAAC;IACH,CAAC;IAEO,SAAS,CAAC,IAAY;QAC7B,IAAI,UAAU,GAAe,EAAE,CAAC;QAEhC,OAAO,UAAU,CAAC;IACpB,CAAC;IAEQ,MAAM,CAAC,IAAY;QAC1B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE;IAClD,CAAC;;8FA3CW,uBAAuB;uGAAvB,uBAAuB,oHAFvB,CAAC,0DAAc,CAAC;;QCb7B,yEAAuB;QACnB,0EAAS;QACL,mIAIc;QAClB,4DAAU;QACd,4DAAM;QAEN,oEAAuD;QAEvD,6EAAgF;QAAhC,+RAAY,eAAkB,IAAC;QAE3E,yEAAuC;QACnC,yEAA2B;QACvB,2EAAgC;QAAA,8EAAmB;QAAA,4DAAQ;QAC3D,uEAA8F;QAClG,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,4EAAiC;QAAA,gFAAoB;QAAA,4DAAQ;QAC7D,wEAA+F;QACnG,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAuB;QAAA,qEAAS;QAAA,4DAAQ;QACxC,6EAA4F;QAChG,4DAAM;QAEN,0EAA2B;QACvB,6EAA2B;QAAA,0EAAc;QAAA,4DAAQ;QACjD,6EAAgG;QACpG,4DAAM;QAEN,0EAA2B;QACvB,6EAA2B;QAAA,8EAAkB;QAAA,4DAAQ;QACrD,6EAAiG;QACrG,4DAAM;QACV,4DAAM;QAEN,2EAAiD;QAE7C,2EAA6B;QACzB,yEAA4F;QAChG,4DAAM;QACV,4DAAM;QAEV,4DAAO;;QArBiB,2DAAiB;QAAjB,8EAAiB;QAKjB,0DAAiB;QAAjB,8EAAiB;QAKjB,0DAAiB;QAAjB,8EAAiB;;;;;;;;;;;;;;ACxCzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACb;AACkC;AACvB;AAET;AACS;AACT;AACH;AACe;AACd;AACC;AACE;AACI;AACI;AACG;AACR;AACF;AACL;AACD;AACI;AACN;AACO;AACN;AACA;AAE6B;AAC+B;AACS;AACzB;AACuB;AACP;AACE;AACT;AACA;AAC3B;AACY;;AA6CzE,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FADb,EAAE,YAzBJ;YACP,uEAAa;YACb,4FAAuB;YACvB,oEAAgB;YAChB,qEAAgB;YAChB,6DAAa;YACb,yDAAW;YACX,yEAAmB;YACnB,2DAAY;YACZ,0DAAW;YACX,4DAAY;YACZ,8DAAa;YACb,kEAAe;YACf,sEAAiB;YACjB,0EAAmB;YACnB,gEAAc;YACd,kEAAe;YACf,0DAAW;YACX,0DAAW;YACX,8DAAa;YACb,wDAAU;YACV,gEAAc;YACd,0DAAW;YACX,0DAAW;SACZ;oIAIU,SAAS,mBAzClB,2DAAY;QACZ,oFAAe;QACf,iFAAc;QACd,6FAAkB;QAClB,mHAAwB;QACxB,4HAA2B;QAC3B,mHAAwB;QACxB,4GAAsB;QACtB,qHAAyB;QACzB,4GAAsB;QACtB,mGAAoB;QACpB,0HAAuB,aAGvB,uEAAa;QACb,4FAAuB;QACvB,oEAAgB;QAChB,qEAAgB;QAChB,6DAAa;QACb,yDAAW;QACX,yEAAmB;QACnB,2DAAY;QACZ,0DAAW;QACX,4DAAY;QACZ,8DAAa;QACb,kEAAe;QACf,sEAAiB;QACjB,0EAAmB;QACnB,gEAAc;QACd,kEAAe;QACf,0DAAW;QACX,0DAAW;QACX,8DAAa;QACb,wDAAU;QACV,gEAAc;QACd,0DAAW;QACX,0DAAW;;;;;;;;;;;;;AC1Ef;AAAA;AAAA;AAAA;AAAA;AAAqE;;;AAM9D,MAAM,aAAa;IAEtB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAE,CAAC;IAErC,QAAQ;QACJ,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG;IAC1B,CAAC;IAED,QAAQ,CAAC,IAAY;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,aAAa,CAAC,GAAW;QACrB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC;IAClC,CAAC;IAED,kBAAkB,CAAC,IAAY,EAAE,KAAU;QACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,cAAc;QACV,OAAO;YACH;gBACE,KAAK,EAAC,WAAW;gBACjB,IAAI,EAAC,wBAAwB;aAChC;YACD;gBACG,KAAK,EAAC,aAAa;gBACnB,IAAI,EAAC,wBAAwB;gBAC7B,KAAK,EAAC;oBACH;wBACG,KAAK,EAAC,MAAM;wBACZ,IAAI,EAAC,kBAAkB;wBACvB,UAAU,EAAE,CAAC,kFAAc,CAAC,eAAe,CAAC;qBAE9C;oBACD;wBACG,KAAK,EAAC,oBAAoB;wBAC1B,IAAI,EAAC,kBAAkB;wBACvB,UAAU,EAAE,CAAC,kFAAc,CAAC,kBAAkB,CAAC;qBACjD;iBACH;aACH;YACD;gBACG,KAAK,EAAC,UAAU;gBAChB,IAAI,EAAC,mBAAmB;gBACxB,KAAK,EAAC;oBACL;wBACG,KAAK,EAAC,MAAM;wBACZ,IAAI,EAAC,kBAAkB;wBACvB,UAAU,EAAE,CAAC,kFAAc,CAAC,kBAAkB,CAAC;qBACjD;oBACD;wBACG,KAAK,EAAC,iBAAiB;wBACvB,IAAI,EAAC,kBAAkB;wBACvB,UAAU,EAAE,CAAC,kFAAc,CAAC,eAAe,CAAC;qBAC9C;iBACH;aACD;YACD;gBACG,KAAK,EAAC,aAAa;gBACnB,IAAI,EAAC,qBAAqB;gBAC1B,KAAK,EAAC;oBACL;wBACG,KAAK,EAAC,MAAM;wBACZ,IAAI,EAAC,kBAAkB;wBACvB,UAAU,EAAE,CAAC,kFAAc,CAAC,qBAAqB,CAAC;qBACpD;oBACD;wBACG,KAAK,EAAC,oBAAoB;wBAC1B,IAAI,EAAC,kBAAkB;wBACvB,UAAU,EAAE,CAAC,kFAAc,CAAC,kBAAkB,CAAC;qBACjD;iBACH;aACD;YACD;gBACE,KAAK,EAAC,UAAU;gBAChB,IAAI,EAAC,kBAAkB;gBACvB,KAAK,EAAC;oBACH;wBACG,KAAK,EAAC,MAAM;wBACZ,IAAI,EAAC,kBAAkB;qBACzB;oBACD;wBACG,KAAK,EAAC,iBAAiB;wBACvB,IAAI,EAAC,kBAAkB;qBACzB;iBACH;aACH;YACA;gBACG,KAAK,EAAC,QAAQ;gBACd,IAAI,EAAC,uBAAuB;aAC9B;SACJ,CAAC;IACJ,CAAC;;0EA9FQ,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFV,MAAM;;;;;;;;;;;;;ACJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACwB;AAOf;;;;;;;;;;;;;;;;;;ICR1C,0EAA+C;IAC3C,yEAAkB;IAAA,2EAAgB;IAAA,4DAAK;IAC3C,4DAAM;;;IAaF,4EAAuE;IAAA,kGAA6B;IAAA,4DAAQ;;;IAC5G,4EAAwE;IAAA,qFAA0B;IAAA,4DAAQ;;;IAQ1G,4EAAmE;IAAA,gGAA2B;IAAA,4DAAQ;;;IAKtG,4EAAqE;IAAA,iGAA4B;IAAA,4DAAQ;;;IAK3G,4EAAqE;IAAA,iGAA4B;IAAA,4DAAQ;;;IAKzG,4EAAiF;IAAA,uGAAkC;IAAA,4DAAQ;;ADvBlI,MAAM,wBAAwB;IAMlC,YACa,cAA8B,EAC9B,aAA4B,EAC5B,YAA0B,EAC1B,gBAAkC,EAClC,KAAqB;QAJrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAgB;QATlC,cAAS,GAAc,EAAE;QAEzB,UAAK,GAAG,CAAC,EAAE,CAAC;IAQR,CAAC;IAEL,QAAQ;QACL,IAAI,CAAC,eAAe,EAAE,CAAC;IAC1B,CAAC;IAED,MAAM,CAAC,IAAY;QAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QACrC,gCAAgC;IACnC,CAAC;IAED,QAAQ;QACL,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,kFAAc,CAAC,kBAAkB,CAAC;IACjE,CAAC;IAEO,eAAe;QACpB,IAAI,WAAW,GAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,IAAe,EAAE,EAAE;YACrE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9D,CAAC,CACH,CAAC;IACL,CAAC;IAEO,cAAc;QACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE;IACpD,CAAC;IAEO,SAAS,CAAC,IAAY;QAC3B,IAAI,SAAS,GAAc,EAAE,CAAC;QAC9B,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC1C,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QAChC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAClC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAClC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QAC9C,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACjD,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACvD,SAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAClD,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC5C,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/D,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACvE,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;QAC9B,SAAS,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;QACpC,OAAO,SAAS,CAAC;IACpB,CAAC;IAEO,gBAAgB,CAAC,IAAY;QAClC,IAAI,QAAQ,GAAa,EAAE,CAAC;QAC5B,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;QACzC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;QACnC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;QACnC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;QACnC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;QAC7B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACpC,QAAQ,CAAC,IAAI,GAAG,QAAQ;QACxB,OAAO,QAAQ,CAAC;IACnB,CAAC;IAEO,iBAAiB,CAAC,IAAY;QACnC,IAAI,aAAa,GAAmB,EAAE,CAAC;QACvC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC1C,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC9C,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACvC,aAAa,CAAC,MAAM,GAAG,CAAC;QACxB,OAAO,aAAa,CAAC;IACxB,CAAC;IAEO,MAAM,CAAC,IAAY;QACxB,IAAI,CAAC,SAAS,EAAE,CAAC;IACpB,CAAC;;gGAnFS,wBAAwB;wGAAxB,wBAAwB,iHAFtB,CAAC,0DAAc,CAAC;;QCjB/B,yEAAuB;QACnB,0EAAS;QACL,oIAIc;QAClB,4DAAU;QACd,4DAAM;QAEN,yEAAiD;QAE7C,6EAAwG;QAAnC,iSAAY,eAAqB,IAAC;QAEnG,yEAAuC;QACnC,yEAA2B;QACvB,2EAA2B;QAAA,+DAAI;QAAA,4DAAQ;QACvC,+EAAsJ;QAA/D,8MAAqC;QAA5H,4DAAsJ;QACtJ,2HAA4G;QAC5G,2HAA0G;QAC9G,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAgB;QAAA,8DAAE;QAAA,4DAAQ;QAC1B,oFAA+G;QAC/G,2HAAsG;QAC1G,4DAAM;QACN,0EAA2B;QACvB,6EAAiB;QAAA,+DAAG;QAAA,4DAAQ;QAC5B,kFAA8G;QAC9G,2HAAyG;QAC7G,4DAAM;QACN,0EAA2B;QACzB,6EAAiB;QAAA,+DAAG;QAAA,4DAAQ;QAC5B,oFAAiI;QACjI,2HAAyG;QAC7G,4DAAM;QACN,0EAA2B;QACvB,6EAAuB;QAAA,qEAAS;QAAA,4DAAQ;QACxC,4EAA6F;QAC7F,2HAA2H;QAC/H,4DAAM;QACR,4DAAM;QAEN,0EAAuC;QACnC,2EAA8B;QAC1B,6EAAkB;QAAA,yEAAQ;QAAA,4DAAQ;QAClC,wEAAuE;QAC3E,4DAAM;QACN,2EAA8B;QAC1B,6EAAoB;QAAA,uEAAM;QAAA,4DAAQ;QAClC,wEAAoE;QACxE,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,2EAA6B;QACzB,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,wEAAkE;QACtE,4DAAM;QAEN,2EAA6B;QACzB,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,wEAAiE;QACrE,4DAAM;QAEN,2EAA6B;QACzB,6EAAiB;QAAA,+DAAG;QAAA,4DAAQ;QAC5B,8EAAwE;QAC5E,4DAAM;QAEN,0EAA2B;QACzB,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,wEAAiE;QACrE,4DAAM;QACR,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,gFAAoG;QACxG,4DAAM;QAEN,0EAA2B;QACvB,6EAAqB;QAAA,wEAAO;QAAA,4DAAQ;QACpC,gFAAwG;QAC5G,4DAAM;QAEN,0EAA2B;QACvB,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,gFAAoG;QACxG,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,2EAA6B;QACzB,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,8EAAwF;QAC5F,4DAAM;QAEN,0EAA2B;QACvB,6EAAmB;QAAA,kEAAM;QAAA,4DAAQ;QACjC,wEAA8D;QAClE,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAuB;QAAA,qEAAS;QAAA,4DAAQ;QACxC,6EAA4F;QAChG,4DAAM;QAEN,0EAA2B;QACvB,6EAA2B;QAAA,0EAAc;QAAA,4DAAQ;QACjD,6EAAgG;QACpG,4DAAM;QACV,4DAAM;QAGN,wEAAuB;QAEvB,2EAAiD;QAC7C,2EAA6B;QACzB,8EAAyG;QAArB,iJAAS,cAAU,IAAC;QAAC,4DAAS;QACtH,4DAAM;QAEN,4EAA6B;QACzB,0EAA8H;QAClI,4DAAM;QACV,4DAAM;QAEV,4DAAO;QAEP,4DAAM;QAEN,2EAAwC;;;;;;;;QAxH2D,2DAAqC;QAArC,gGAAqC;QACpG,0DAA6C;QAA7C,uGAA6C;QAC7C,0DAA8C;QAA9C,wGAA8C;QAO7B,0DAAqB;QAArB,8EAAqB;QACtC,0DAAyC;QAAzC,uGAAyC;QAIF,0DAAiB;QAAjB,0EAAiB;QACxD,0DAA2C;QAA3C,uGAA2C;QAInB,0DAAqB;QAArB,8EAAqB;QAC/C,0DAA2C;QAA3C,uGAA2C;QAK3C,0DAAuD;QAAvD,yGAAuD;QAwCvB,2DAAqB;QAArB,8EAAqB;QAKjB,0DAAqB;QAArB,8EAAqB;QAKzB,0DAAqB;QAArB,8EAAqB;QAmB/D,2DAAiB;QAAjB,8EAAiB;QAKjB,0DAAiB;QAAjB,8EAAiB;QAa6B,0DAAiC;QAAjC,gFAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;ICxH/F,oFACJ;;ACAD,MAAM,eAAe;IAIzB,YACS,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAHrC,UAAK,GAAe,EAAE,CAAC;IAIrB,CAAC;IAEH,QAAQ;QACP,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE;IACjD,CAAC;;8EAVS,eAAe;+FAAf,eAAe;QDV5B,yEAA0B;QACxB,yEAAuB;QACrB,yEAAkB;QAChB,yEAAqB;QACnB,+EAA2B;QACzB,2HAEc;QACd,2HAEY;QAChB,4DAAY;QACZ,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAXa,0DAAe;QAAf,4EAAe;;;;;;;;;;;;;;AEJlC;AAAA;AAAA,IAAY,cAGX;AAHD,WAAY,cAAc;IACtB,iEAAU;IACV,qEAAY;AAChB,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAA2D;AAE5C,MAAM,KAAK;IAEtB,MAAM,CAAC,cAAc,CAAC,IAAY;QAC9B,OAAO,wEAAW,CAAC,OAAO,GAAG,IAAI,CAAC;IACtC,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,KAAa,EAAE,UAAkB;QAC5C,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAG,KAAK,CAAC,MAAM,GAAG,UAAU,EAAC;YAC3B,IAAI,MAAM,GAAG,UAAU,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;YACtD,OAAO,GAAI,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAC,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC;SACjD;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ;;;;;;;;;;;;;AChBD;AAAA;AAAA,IAAY,UAGX;AAHD,WAAY,UAAU;IAClB,yCAAO;IACP,mDAAO;AACX,CAAC,EAHW,UAAU,KAAV,UAAU,QAGrB;;;;;;;;;;;;;ACDD;AAAA;AAAe,MAAM,YAAY;IAE7B,MAAM,CAAC,gBAAgB,CAAC,OAAe;QACnC,OAAO,EAAC,QAAQ,EAAC,SAAS,EAAE,OAAO,EAAE,+BAA+B,EAAE,MAAM,EAAE,OAAO,EAAC,CAAC;IAC3F,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,OAAe;QACjC,OAAO,EAAC,QAAQ,EAAC,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAC,CAAC;IAC3E,CAAC;CACJ;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACY;AAEc;;;;;;;;;;;;;;;;;ICH7D,0EAA+C;IAC3C,yEAAkB;IAAA,kFAAuB;IAAA,4DAAK;IAClD,4DAAM;;;IAaF,4EAAuE;IAAA,kGAA6B;IAAA,4DAAQ;;;IAC5G,4EAAwE;IAAA,qFAA0B;IAAA,4DAAQ;;;IAQ1G,4EAAmE;IAAA,gGAA2B;IAAA,4DAAQ;;;IAKtG,4EAAqE;IAAA,iGAA4B;IAAA,4DAAQ;;;IAK3G,4EAAqE;IAAA,iGAA4B;IAAA,4DAAQ;;;IAKzG,4EAAiF;IAAA,uGAAkC;IAAA,4DAAQ;;ADvB9H,MAAM,2BAA2B;IAMrC,YACW,cAA8B,EAC9B,aAA4B,EAC5B,YAA0B,EAC1B,gBAAkC;QAHlC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAR7C,UAAK,GAAG,CAAC,EAAE,CAAC;QAEZ,cAAS,GAAc,EAAE;IAOrB,CAAC;IAEL,QAAQ;QACP,IAAI,CAAC,cAAc,EAAE;IACtB,CAAC;IAED,MAAM,CAAC,IAAY;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEF,QAAQ;QACL,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,kFAAc,CAAC,kBAAkB,CAAC;IACjE,CAAC;IAED,cAAc;QACb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE;IAClD,CAAC;IAEO,kBAAkB,CAAC,IAAY;QACtC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACjE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,gBAAgB,CAAC,wCAAwC,CAAC,CAAC,CAAC;QACnG,CAAC,EAAC,KAAK,CAAC,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9D,CAAC,EAAC,GAAG,EAAE;YACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CACF,CAAC;IACH,CAAC;IAEO,SAAS,CAAC,IAAY;QAC3B,IAAI,SAAS,GAAc,EAAE,CAAC;QAC9B,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC1C,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QAChC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAClC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAClC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QAC9C,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACjD,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACvD,SAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAClD,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC5C,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/D,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACvE,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;QAC9B,SAAS,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;QACpC,OAAO,SAAS,CAAC;IACpB,CAAC;IAEO,gBAAgB,CAAC,IAAY;QAClC,IAAI,QAAQ,GAAa,EAAE,CAAC;QAC5B,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;QACzC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;QACnC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;QACnC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;QACnC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;QAC7B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACpC,QAAQ,CAAC,IAAI,GAAG,QAAQ;QACxB,OAAO,QAAQ,CAAC;IACnB,CAAC;IAEO,iBAAiB,CAAC,IAAY;QACpC,IAAI,aAAa,GAAmB,EAAE,CAAC;QACvC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC1C,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC9C,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACvC,aAAa,CAAC,MAAM,GAAG,CAAC;QACxB,OAAO,aAAa,CAAC;IACvB,CAAC;IAEO,MAAM,CAAC,IAAY;QACxB,IAAI,CAAC,SAAS,EAAE,CAAC;IACpB,CAAC;;sGAlFS,2BAA2B;2GAA3B,2BAA2B,oHAF3B,CAAC,0DAAc,CAAC;;QCjB7B,yEAAuB;QACvB,0EAAS;QACL,uIAIc;QAClB,4DAAU;QACV,4DAAM;QAEN,yEAAiD;QAEjD,6EAAgG;QAA/B,oSAAY,eAAiB,IAAC;QAE3F,yEAAuC;QACnC,yEAA2B;QACvB,2EAA2B;QAAA,+DAAI;QAAA,4DAAQ;QACvC,0EAAwH;QACxH,8HAA4G;QAC5G,8HAA0G;QAC9G,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAgB;QAAA,8DAAE;QAAA,4DAAQ;QAC1B,oFAA+G;QAC/G,8HAAsG;QAC1G,4DAAM;QACN,0EAA2B;QACvB,6EAAiB;QAAA,+DAAG;QAAA,4DAAQ;QAC5B,kFAA8G;QAC9G,8HAAyG;QAC7G,4DAAM;QACN,0EAA2B;QACzB,6EAAiB;QAAA,+DAAG;QAAA,4DAAQ;QAC5B,oFAAiI;QACjI,8HAAyG;QAC7G,4DAAM;QACN,0EAA2B;QACvB,6EAAuB;QAAA,qEAAS;QAAA,4DAAQ;QACxC,4EAA6F;QAC7F,8HAA2H;QAC/H,4DAAM;QACR,4DAAM;QAEN,0EAAuC;QACnC,2EAA8B;QAC1B,6EAAkB;QAAA,yEAAQ;QAAA,4DAAQ;QAClC,wEAAuE;QAC3E,4DAAM;QACN,2EAA8B;QAC1B,6EAAoB;QAAA,uEAAM;QAAA,4DAAQ;QAClC,wEAAoE;QACxE,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,2EAA6B;QACzB,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,wEAAkE;QACtE,4DAAM;QAEN,2EAA6B;QACzB,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,wEAAiE;QACrE,4DAAM;QAEN,2EAA6B;QACzB,6EAAiB;QAAA,+DAAG;QAAA,4DAAQ;QAC5B,8EAAwE;QAC5E,4DAAM;QAEN,0EAA2B;QACzB,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,wEAAiE;QACrE,4DAAM;QACR,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,gFAAoG;QACxG,4DAAM;QAEN,0EAA2B;QACvB,6EAAqB;QAAA,wEAAO;QAAA,4DAAQ;QACpC,gFAAwG;QAC5G,4DAAM;QAEN,0EAA2B;QACvB,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,gFAAoG;QACxG,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,2EAA6B;QACzB,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,8EAAwF;QAC5F,4DAAM;QAEN,0EAA2B;QACvB,6EAAmB;QAAA,kEAAM;QAAA,4DAAQ;QACjC,wEAA8D;QAClE,4DAAM;QACV,4DAAM;QAEN,0EAAuC;QACnC,0EAA2B;QACvB,6EAAuB;QAAA,qEAAS;QAAA,4DAAQ;QACxC,6EAA4F;QAChG,4DAAM;QAEN,0EAA2B;QACvB,6EAA2B;QAAA,0EAAc;QAAA,4DAAQ;QACjD,6EAAgG;QACpG,4DAAM;QACV,4DAAM;QAGN,wEAAuB;QAEvB,2EAAiD;QAC7C,2EAA6B;QACzB,8EAAyG;QAArB,oJAAS,cAAU,IAAC;QAAC,4DAAS;QACtH,4DAAM;QAEN,4EAA6B;QACzB,0EAA0H;QAC9H,4DAAM;QACV,4DAAM;QAEV,4DAAO;QAEP,4DAAM;QAEN,2EAAwC;;;;;;;;QAvHJ,2DAA6C;QAA7C,uGAA6C;QAC7C,0DAA8C;QAA9C,wGAA8C;QAO7B,0DAAqB;QAArB,8EAAqB;QACtC,0DAAyC;QAAzC,uGAAyC;QAIF,0DAAiB;QAAjB,0EAAiB;QACxD,0DAA2C;QAA3C,uGAA2C;QAInB,0DAAqB;QAArB,8EAAqB;QAC/C,0DAA2C;QAA3C,uGAA2C;QAK3C,0DAAuD;QAAvD,yGAAuD;QAwCvB,2DAAqB;QAArB,8EAAqB;QAKjB,0DAAqB;QAArB,8EAAqB;QAKzB,0DAAqB;QAArB,8EAAqB;QAmB/D,2DAAiB;QAAjB,8EAAiB;QAKjB,0DAAiB;QAAjB,8EAAiB;QAa6B,0DAA6B;QAA7B,gFAA6B;;;;;;;;;;;;;;AChInG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAE+C;AACS;AACzB;AACuB;AACP;AACE;AACT;AACA;AAC3B;AACY;;;AAEhF,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,6FAAkB,EAAC;IAClD,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2GAAsB,EAAC;IACrD,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,oHAAyB,EAAC;IAC7D,EAAC,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,2GAAsB,EAAC;IAChE,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kHAAwB,EAAC;IAC1D,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,2HAA2B,EAAC;IAClE,EAAC,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,kHAAwB,EAAC;IACrE,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kGAAoB,EAAC;IACtD,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,yHAAuB,EAAC;CAC/D,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;gGAAhB,gBAAgB;oGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;oIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;AC7BuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Prestador } from '../../../model/vo/prestador';\r\nimport { ConfirmationService, ConfirmEventType, MessageService} from 'primeng/api';\r\nimport MessageUtils from 'src/app/utils/message-util';\r\nimport { CommomService } from 'src/app/services/commons/common.service';\r\nimport { NavigationEnum } from 'src/app/model/enums/navigation.enum';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ComboService } from 'src/app/services/combos/combo.service';\r\nimport { ClienteService } from 'src/app/services/clientes/cliente-service';\r\nimport { Cliente } from 'src/app/model/vo/cliente';\r\n\r\n\r\n@Component({\r\n  selector: 'listar-cliente',\r\n  templateUrl: './listar-cliente.component.html',\r\n  styleUrls: ['./listar-cliente.component.css'],\r\n  providers: [ConfirmationService, MessageService]\r\n})\r\nexport class ListarClienteComponent implements OnInit{\r\n\r\n  loading: boolean = true;\r\n\r\n  cliente: Cliente = {};\r\n\r\n  clientes: Cliente[] = [];\r\n\r\n  position = \"top\";\r\n    \r\n  constructor(\r\n      private confirmationService: ConfirmationService,\r\n      private messageService: MessageService,\r\n      private comboService: ComboService,  \r\n      private commomService: CommomService, \r\n      private clienteService: ClienteService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.listar()    \r\n  }\r\n\r\n\r\n  editar(cliente: Cliente){ \r\n    this.cliente = cliente;\r\n    this.commomService.navigateWithParams(NavigationEnum.EDITAR_CLIENTES, this.cliente.idCliente)\r\n  }\r\n\r\n  deletar(cliente: Cliente){        \r\n        let idCliente = <number> cliente.idCliente\r\n        this.confirmationService.confirm({\r\n            message: 'Tem certeza que deseja remover o Cliente ' + cliente.nomeCliente + ' ?',\r\n            header: 'Confirmação',\r\n            icon: 'pi pi-info-circle',\r\n            accept: () => {\r\n              this.removerCliente(idCliente);                \r\n            },            \r\n            key: \"positionDialog\"\r\n        });\r\n  }\r\n\r\n  novoCliente(){\r\n    this.commomService.navigate(NavigationEnum.ADICIONAR_CLIENTES)\r\n  };\r\n\r\n  removerCliente(idCliente: number) {\r\n    this.clienteService.delete(idCliente).subscribe((data: any) => {  \r\n      this.messageService.add(MessageUtils.onSuccessMessage(\"O registro foi excluído com sucesso !\"));      \r\n     }, \r\n     error => {\r\n       console.log(error);\r\n        this.messageService.add(MessageUtils.onErrorMessage(error));        \r\n      } \r\n    );\r\n  };\r\n\r\n  listar(){\r\n    this.clienteService.read().subscribe(\r\n      (data: Cliente[]) => {\r\n        this.clientes = data;\r\n        this.loading = false;        \r\n      }, error => {\r\n        this.messageService.add(MessageUtils.onErrorMessage(error));\r\n        this.loading = false;          \r\n      } \r\n    );\r\n  }\r\n}\r\n","<p-table #dt [value]=\"clientes\" [rows]=\"10\" [paginator]=\"clientes.length > 0\" [loading]=\"loading\"   [rowHover]=\"true\" dataKey=\"id\">\r\n        <ng-template pTemplate=\"caption\">\r\n            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                <h5 class=\"p-m-0\">Lista de Clientes</h5>\r\n                <span class=\"p-input-icon-left\">\r\n                  <button pButton pRipple label=\"Novo\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" (click)=\"novoCliente()\"></button>\r\n                </span>\r\n            </div>\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate=\"header\" >\r\n            <tr>\r\n                <th pSortableColumn=\"id\" style=\"text-align: center; \">ID <p-sortIcon field=\"id\"></p-sortIcon></th>\r\n                <th pSortableColumn=\"nome\" style=\"text-align: center;\">Nome <p-sortIcon field=\"nome\"></p-sortIcon></th>\r\n                <th style=\"text-align: center;\">Email</th>\r\n                <th pSortableColumn=\"status\" style=\"text-align: center;\">Status <p-sortIcon field=\"status\"></p-sortIcon></th>\r\n                <th style=\"text-align: center;\">Ações</th>\r\n              </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-cliente *ngIf=\"!clientes.length\">\r\n            <tr>\r\n                <td style=\"text-align: center;\">{{cliente.idCliente}}</td>\r\n                <td style=\"text-align: center;\">{{cliente.nomeCliente}}</td>\r\n                <td style=\"text-align: center;\">{{cliente.emailCliente}}</td>\r\n                <td style=\"text-align: center;\">{{cliente.situacaoCliente}}</td>                \r\n                <td style=\"text-align: center;\" >\r\n                    <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success p-mr-2\" (click)=\"editar(cliente)\" ></button>\r\n                    <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\" (click)=\"deletar(cliente)\"></button>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n\r\n\r\n<p-confirmDialog \r\n        [style]=\"{width: '50vw'}\" \r\n        key=\"positionDialog\" \r\n        [position]=\"position\" \r\n        [baseZIndex]=\"10000\" \r\n        acceptLabel=\"SIM\"\r\n        acceptButtonStyleClass=\"p-button-success\"\r\n        rejectLabel=\"NÃO\"\r\n        rejectButtonStyleClass=\"p-button-danger\">\r\n</p-confirmDialog>\r\n<p-toast position=\"top-right\"></p-toast>","import { Component, OnInit } from '@angular/core';\r\nimport { Prestador } from '../../../model/vo/prestador';\r\nimport { PrestadorService } from 'src/app/services/prestadores/prestador-service';\r\nimport { ConfirmationService, ConfirmEventType, MessageService} from 'primeng/api';\r\nimport MessageUtils from 'src/app/utils/message-util';\r\nimport { CommomService } from 'src/app/services/commons/common.service';\r\nimport { NavigationEnum } from 'src/app/model/enums/navigation.enum';\r\n\r\n\r\n@Component({\r\n  selector: 'listar-prestador',\r\n  templateUrl: './listar-prestador.component.html',\r\n  styleUrls: ['./listar-prestador.component.css'],\r\n  providers: [ConfirmationService, MessageService]\r\n})\r\nexport class ListarPrestadorComponent implements OnInit{\r\n\r\n  loading: boolean = true;\r\n\r\n  prestador = new Prestador();\r\n\r\n  prestadores: Prestador[] = [];\r\n\r\n  position = \"top\";\r\n\r\n  itens = [{}]\r\n  \r\n  constructor(\r\n      private confirmationService: ConfirmationService,\r\n      private messageService: MessageService,     \r\n      private commomService: CommomService, \r\n      private prestadorService: PrestadorService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.listarPrestadores()    \r\n  }\r\n\r\n\r\n  editar(prestadorSelecionado: Prestador){ \r\n    this.prestador = prestadorSelecionado;\r\n    this.commomService.navigateWithParams(NavigationEnum.EDITAR_PRESTADORES, this.prestador.idPrestador)\r\n  }\r\n\r\n  deletar(prestador: Prestador){        \r\n        let idPrestador = <number> prestador.idPrestador\r\n        this.confirmationService.confirm({\r\n            message: 'Tem certeza que deseja remover o Prestador ' + prestador.nomePrestador + ' ?',\r\n            header: 'Confirmação',\r\n            icon: 'pi pi-info-circle',\r\n            accept: () => {\r\n              console.log(\"id prestador - \" + idPrestador);\r\n                this.removerPrestador(idPrestador);                \r\n            },            \r\n            key: \"positionDialog\"\r\n        });\r\n  }\r\n\r\n  novoPrestador(){\r\n    this.commomService.navigate(NavigationEnum.ADICIONAR_PRESTADORES)\r\n  };\r\n\r\n  removerPrestador(idPrestador: number) {\r\n    this.prestadorService.delete(idPrestador).subscribe((data: any) => {  \r\n      console.log(data);\r\n      this.messageService.add(MessageUtils.onSuccessMessage(\"O registro foi excluído com sucesso !\"));\r\n     }, \r\n     error => {\r\n       console.log(error);\r\n        this.messageService.add(MessageUtils.onErrorMessage(error));        \r\n      } \r\n    );\r\n  };\r\n\r\n  listarPrestadores(){\r\n    this.prestadorService.read().subscribe(\r\n      (data: Prestador[]) => {\r\n        this.prestadores = data;\r\n        this.loading = false;        \r\n      }, error => {\r\n        this.messageService.add(MessageUtils.onErrorMessage(error));\r\n        this.loading = false;          \r\n      } \r\n    );\r\n  }\r\n\r\n\r\n}\r\n","<p-table #dt [value]=\"prestadores\" [rows]=\"10\" [paginator]=\"prestadores.length > 0\" [loading]=\"loading\"   [rowHover]=\"true\" dataKey=\"id\">\r\n        <ng-template pTemplate=\"caption\">\r\n            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                <h5 class=\"p-m-0\">Cadastro de Prestadores</h5>\r\n                <span class=\"p-input-icon-left\">\r\n                  <button pButton pRipple label=\"Novo\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" (click)=\"novoPrestador()\"></button>\r\n                </span>\r\n            </div>\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate=\"header\" >\r\n            <tr>\r\n                <th pSortableColumn=\"id\" style=\"text-align: center;\">ID <p-sortIcon field=\"id\"></p-sortIcon></th>\r\n                <th pSortableColumn=\"nome\" style=\"text-align: center;\">Nome <p-sortIcon field=\"nome\"></p-sortIcon></th>\r\n                <th style=\"text-align: center;\">Email</th>\r\n                <th pSortableColumn=\"status\" style=\"text-align: center;\">Status <p-sortIcon field=\"status\"></p-sortIcon></th>\r\n                <th style=\"text-align: center;\">Ações</th>\r\n              </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-prestador *ngIf=\"!prestadores.length\">\r\n            <tr>\r\n                <td style=\"text-align: center;\">{{prestador.idPrestador}}</td>\r\n                <td style=\"text-align: center;\">{{prestador.nomePrestador}}</td>\r\n                <td style=\"text-align: center;\">{{prestador.emailPrestador}}</td>\r\n                <td style=\"text-align: center;\">{{prestador.situacaoPrestador}}</td>                \r\n                <td style=\"text-align: center;\" >\r\n                    <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success p-mr-2\" (click)=\"editar(prestador)\" ></button>\r\n                    <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\" (click)=\"deletar(prestador)\"></button>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n\r\n\r\n<p-confirmDialog \r\n        [style]=\"{width: '50vw'}\" \r\n        key=\"positionDialog\" \r\n        [position]=\"position\" \r\n        [baseZIndex]=\"10000\" \r\n        acceptLabel=\"SIM\"\r\n        acceptButtonStyleClass=\"p-button-success\"\r\n        rejectLabel=\"NÃO\"\r\n        rejectButtonStyleClass=\"p-button-danger\">\r\n</p-confirmDialog>\r\n<p-toast position=\"top-right\"></p-toast>","import { Data } from \"@angular/router\";\r\nimport { DadosBancarios } from \"./dados-bancarios\";\r\nimport { Endereco } from \"./endereco\";\r\n\r\nexport class Cliente{    \r\n    idCliente?: number;\r\n    endereco?: Endereco = {};\r\n    contaBancaria?: DadosBancarios = {};\r\n    nomeCliente?: string;\r\n    nomeResponsavel?: string;\r\n    tipoPessoa?: string;\r\n    numCpfCnpj?: string;\r\n    numInscricaoEstadual?: string;\r\n    situacaoCliente?: string;\r\n    telefoneCliente?: string;\r\n    emailCliente?: string;\r\n    informacaoContrato?: string;\r\n    observacoesGerais?: string;\r\n    codigoUsuarioInclusao?: number;\r\n    dataInclusao?: Data;\r\n    codigoUsuarioAlteracao?: number;\r\n    dataAlteracao?: Data;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ComboService } from 'src/app/services/combos/combo.service';\r\nimport { PrestadorService } from 'src/app/services/prestadores/prestador-service';\r\nimport {MessageService} from 'primeng/api';\r\nimport  MessageUtils from 'src/app/utils/message-util';\r\nimport { CommomService } from 'src/app/services/commons/common.service';\r\nimport { NavigationEnum } from 'src/app/model/enums/navigation.enum';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Prestador } from 'src/app/model/vo/prestador';\r\nimport { Endereco } from 'src/app/model/vo/endereco';\r\nimport { DadosBancarios } from 'src/app/model/vo/dados-bancarios';\r\nimport { ClienteService } from 'src/app/services/clientes/cliente-service';\r\nimport { Cliente } from 'src/app/model/vo/cliente';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport Utils from 'src/app/utils/utils';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n\r\n@Component({\r\n  selector: 'editar-cliente',\r\n  templateUrl: './editar-cliente.component.html',\r\n  styleUrls: ['./editar-cliente.component.css'],\r\n  providers: [MessageService]\r\n})\r\nexport class EditarClienteComponent implements OnInit{\r\n    \r\n\r\n    tipoPessoa = [{}];\r\n\r\n    tipoPessoaSelecionada = 1;\r\n     \r\n    idCliente = 0;\r\n\r\n    cliente = new Cliente()\r\n\r\n    ngOnInit() {\r\n        this.tipoPessoa = this.comboService.getTipoPessoa()\r\n        this.buscarCliente()\r\n    }\r\n\r\n    constructor(\r\n        private messageService: MessageService, \r\n        private commomService: CommomService, \r\n        private comboService: ComboService, \r\n        private clienteService: ClienteService,\r\n        private route: ActivatedRoute\r\n     ) { }\r\n\r\n\r\n    salvar(form : NgForm){\r\n        this.cliente = this.parseData(form);        \r\n        this.editarCliente(form);\r\n    }\r\n    \r\n    cancelar(){\r\n       this.commomService.navigate(NavigationEnum.LISTAR_CLIENTES)\r\n    }\r\n\r\n    tipoPessoaChange(event: any){\r\n        this.tipoPessoaSelecionada = event.value;\r\n    }\r\n\r\n    redirectToList(event: any){\r\n      this.commomService.navigateByUrl(NavigationEnum.LISTAR_CLIENTES)\r\n    }\r\n\r\n    private buscarCliente(){\r\n      let idCliente = <number> this.route.snapshot.params['id'];\r\n      this.clienteService.readByID(idCliente).subscribe((data: Cliente) => {\r\n           console.log(data);    \r\n           this.cliente = data;\r\n           this.idCliente = <number> data.idCliente\r\n           this.cliente.telefoneCliente = Utils.leftPad(<string> this.cliente.telefoneCliente, 11);              \r\n         }, error => {\r\n           this.messageService.add(MessageUtils.onErrorMessage(error));                   \r\n         } \r\n      );      \r\n    }\r\n\r\n    private editarCliente(form: NgForm){\r\n      this.clienteService.update(this.cliente).subscribe((data: any) => {\r\n          this.messageService.add(MessageUtils.onSuccessMessage(\"O cliente foi atualizado com sucesso\"));       \r\n      },error => {\r\n          this.messageService.add(MessageUtils.onErrorMessage(error));        \r\n      });      \r\n    }\r\n\r\n    private parseData(form: NgForm) : Cliente{\r\n        let cliente: Cliente = {};\r\n        cliente.idCliente = this.idCliente;\r\n        cliente.contaBancaria = this.getDadosBancarios(form);\r\n        cliente.emailCliente = form.value.email;\r\n        cliente.endereco = this.getDadosEndereco(form);        \r\n        cliente.informacaoContrato = form.value.informacaoContrato\r\n        cliente.nomeCliente = form.value.nome\r\n        cliente.nomeResponsavel = form.value.nomeResponsavel;\r\n        cliente.numCpfCnpj = form.value.tipoPessoa == 1 ? form.value.cpf : form.value.cnpj;\r\n        cliente.numInscricaoEstadual = form.value.numInscricaoEstadual;\r\n        cliente.observacoesGerais = form.value.observacoes;\r\n        cliente.telefoneCliente = form.value.telefone;\r\n        cliente.tipoPessoa = form.value.tipoPessoa;\r\n        return cliente;  \r\n     }\r\n\r\n     private getDadosEndereco(form: NgForm): Endereco{\r\n        let endereco: Endereco = {};\r\n        endereco.logradouro = form.value.endereco\r\n        endereco.numero = form.value.numero\r\n        endereco.cidade = form.value.cidade\r\n        endereco.bairro = form.value.bairro\r\n        endereco.cep = form.value.cep\r\n        endereco.estado = form.value.estado;\r\n        endereco.pais = \"BRASIL\"\r\n        return endereco;\r\n     }\r\n  \r\n     private getDadosBancarios(form: NgForm): DadosBancarios{\r\n       let contaBancaria: DadosBancarios = {};\r\n       contaBancaria.codBanco = form.value.banco;\r\n       contaBancaria.codAgencia = form.value.agencia;\r\n       contaBancaria.conta = form.value.conta;\r\n       contaBancaria.digito = 1\r\n       return contaBancaria;\r\n     }\r\n  \r\n     private limpar(form: NgForm){\r\n        form.resetForm(); \r\n     }\r\n}","<div class=\"container\">\r\n    <p-table>\r\n        <ng-template pTemplate=\"caption\">\r\n            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                <h5 class=\"p-m-0\">Editar Clientes</h5>        \r\n            </div>\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n    \r\n<div class=\"container\" style=\"margin-top: 15px;\">\r\n\r\n    <form id=\"novo-cliente\" autocomplete=\"off\" #clienteForm=\"ngForm\" (ngSubmit)=\"salvar(clienteForm)\">\r\n\r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"nomePrestador\">Nome</label>\r\n                <input type=\"text\" name=\"nome\" pInputText id=\"nomePrestador\" #nome=\"ngModel\" autofocus [(ngModel)]=\"cliente.nomeCliente\" required minlength=\"15\"/>\r\n                <small class=\"p-error\" *ngIf=\"nome.hasError('required') && nome.dirty\">* O campo Nome é obrigatório.</small>\r\n                <small class=\"p-error\" *ngIf=\"nome.hasError('minlength') && nome.dirty\">* Informe o Nome Completo.</small>\r\n            </div>        \r\n        </div>\r\n\r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"rg\">Nome Responsável</label>\r\n                <input type=\"text\" name=\"nomeResponsavel\" pInputText id=\"nomeResponsavel\" #nomeResponsavel=\"ngModel\" [(ngModel)]=\"cliente.nomeResponsavel\" required minlength=\"15\"/>\r\n                <small class=\"p-error\" *ngIf=\"nomeResponsavel.hasError('required') && nomeResponsavel.dirty\">* O campo Nome é obrigatório.</small>\r\n                <small class=\"p-error\" *ngIf=\"nomeResponsavel.hasError('minlength') && nomeResponsavel.dirty\">* Informe o Nome Completo.</small>           \r\n            </div>      \r\n        </div>\r\n\r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"rg\">Informações do Contrato</label>\r\n                <input type=\"text\" name=\"informacaoContrato\" pInputText id=\"informacaoContrato\" #informacaoContrato=\"ngModel\" autofocus [(ngModel)]=\"cliente.informacaoContrato\" required/>\r\n                <small class=\"p-error\" *ngIf=\"informacaoContrato.hasError('required') && informacaoContrato.dirty\">* O campo Nome é obrigatório.</small>                \r\n            </div>      \r\n        </div>\r\n        \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"tipoPessoa\">Tipo Pessoa</label>              \r\n                <p-dropdown [options]=\"tipoPessoa\" name=\"tipoPessoa\" placeholder=\"Selecione\" [(ngModel)]=\"tipoPessoaSelecionada\" (onChange)=\"tipoPessoaChange($event)\"></p-dropdown>        \r\n            </div>\r\n            \r\n            <div class=\"p-field p-col\" *ngIf=\"tipoPessoaSelecionada == 1\">\r\n                <label for=\"cpf\">CPF</label>              \r\n                <p-inputMask id=\"cpf\" name=\"cpf\" mask=\"999.999.999-99\" [(ngModel)]=\"cliente.numCpfCnpj\" [required]=\"true\" #cpf=\"ngModel\"></p-inputMask>\r\n                <small class=\"p-error\" *ngIf=\"cpf.hasError('required') && cpf.dirty\">* O campo CPF é obrigatório.</small>\r\n            </div>\r\n\r\n            <div class=\"p-field p-col\" *ngIf=\"tipoPessoaSelecionada == 2\">\r\n                <label for=\"cpf\">CNPJ</label>              \r\n                <p-inputMask id=\"cpf\" name=\"cnpj\" mask=\"99.999.999/9999-99\" [(ngModel)]=\"cliente.numCpfCnpj\" [required]=\"true\" #cnpj=\"ngModel\"></p-inputMask>\r\n                <small class=\"p-error\" *ngIf=\"cnpj.hasError('required') && cnpj.dirty\">* O campo CPF é obrigatório.</small>\r\n            </div>\r\n\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"numInscricaoEstadual\">Inscrição Estatudal</label>              \r\n                <p-inputNumber id=\"numInscricaoEstadual\" name=\"numInscricaoEstadual\" mode=\"decimal\" [useGrouping]=\"false\" [(ngModel)]=\"cliente.numInscricaoEstadual\"></p-inputNumber>\r\n            </div> \r\n            \r\n        </div>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field  p-col-9\">\r\n                <label for=\"name\">Endereço</label>\r\n                <input type=\"text\" name=\"endereco\" pInputText id=\"endereco\"   [(ngModel)]=\"cliente.endereco!.logradouro\"/>      \r\n            </div>\r\n            <div class=\"p-field  p-col-3\">\r\n                <label for=\"numero\">Número</label>\r\n                <input type=\"text\"  name=\"numero\" pInputText id=\"numero\"  [(ngModel)]=\"cliente.endereco!.numero\" />      \r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col-5\">\r\n                <label for=\"cidade\">Cidade</label>              \r\n                <input type=\"text\" name=\"cidade\" pInputText id=\"cidade\" [(ngModel)]=\"cliente.endereco!.cidade\" />  \r\n            </div>\r\n    \r\n            <div class=\"p-field p-col-4\">\r\n                <label for=\"bairro\">Bairro</label>              \r\n                <input type=\"text\" name=\"bairro\" pInputText id=\"bairro\" [(ngModel)]=\"cliente.endereco!.bairro\"/>  \r\n            </div>\r\n            \r\n            <div class=\"p-field p-col-2\">\r\n                <label for=\"cep\">CEP</label>\r\n                <p-inputMask id=\"cep\" name=\"cep\" mask=\"99999-999\" [(ngModel)]=\"cliente.endereco!.cep\"></p-inputMask>\r\n            </div>        \r\n            \r\n            <div class=\"p-field p-col\">\r\n              <label for=\"estado\">Estado</label>\r\n              <input type=\"text\" name=\"estado\" pInputText id=\"estado\" [(ngModel)]=\"cliente.endereco!.estado\"/>  \r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"banco\">Banco</label>\r\n                <p-inputNumber id=\"banco\" name=\"banco\" mode=\"decimal\" [useGrouping]=\"false\" [(ngModel)]=\"cliente.contaBancaria!.codBanco\"></p-inputNumber>            \r\n            </div>\r\n    \r\n            <div class=\"p-field p-col\"> \r\n                <label for=\"agencia\">Agência</label>              \r\n                <p-inputNumber id=\"agencia\" name=\"agencia\" mode=\"decimal\" [useGrouping]=\"false\" [(ngModel)]=\"cliente.contaBancaria!.codAgencia\"></p-inputNumber> \r\n            </div>\r\n    \r\n            <div class=\"p-field p-col\">\r\n                <label for=\"conta\">Conta</label>              \r\n                <p-inputNumber id=\"conta\" name=\"conta\" mode=\"decimal\" [useGrouping]=\"false\" [(ngModel)]=\"cliente.contaBancaria!.conta\"></p-inputNumber>\r\n            </div>        \r\n        </div>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col-3\">\r\n                <label for=\"telefone\">Telefone</label>\r\n                <p-inputMask id=\"telefone\" name=\"telefone\" mask=\"(99) 99999-9999\" [(ngModel)]=\"cliente.telefoneCliente\"></p-inputMask>\r\n            </div>\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"email\">E-mail</label>              \r\n                <input type=\"text\" name=\"email\" pInputText id=\"email\" [(ngModel)]=\"cliente.emailCliente\">  \r\n            </div>     \r\n        </div>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"email\">Observações</label>              \r\n                <textarea name=\"observacoes\" [rows]=\"5\" [cols]=\"30\" pInputTextarea [(ngModel)]=\"cliente.observacoesGerais\"></textarea>\r\n            </div>     \r\n        </div>\r\n    \r\n    \r\n        <p-divider></p-divider>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid  p-jc-end\">\r\n            <div class=\"p-field p-col-2\">\r\n                <button pButton pRipple label=\"Cancelar\" icon=\"pi pi-times\" class=\"p-button-danger\" (click)=\"cancelar()\"></button> \r\n            </div>  \r\n    \r\n            <div class=\"p-field p-col-2\">\r\n                <button pButton pRipple label=\"Salvar\" icon=\"pi pi-check\" [disabled]=\"!clienteForm.valid\" class=\"p-button-success\"></button> \r\n            </div>       \r\n        </div>\r\n    \r\n    </form>\r\n    \r\n</div>\r\n\r\n<p-toast position=\"top-right\" (onClose)=\"redirectToList($event)\"></p-toast>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: 'http://localhost:8080/onsystem/api/v1'  \r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { SimNaoEnum } from 'src/app/model/enums/simnao.enum';\r\nimport { TipoPessoaEnum } from 'src/app/model/enums/tipopessoa.enum';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ComboService {\r\n\r\n    getSimNaoOptions(){\r\n        return [{ label: SimNaoEnum[1], value: SimNaoEnum['SIM'] }, { label: SimNaoEnum[2], value: SimNaoEnum['NÃO'] }]\r\n    }\r\n    \r\n    getTipoPessoa(){\r\n        return [{ label: TipoPessoaEnum[1], value: TipoPessoaEnum['FÍSICA'] }, { label: TipoPessoaEnum[2], value: TipoPessoaEnum['JURÍDICA'] }]\r\n    }\r\n}","export enum NavigationEnum{\r\n    LISTAR_CLIENTES = '/clientes',\r\n    ADICIONAR_CLIENTES = '/clientes/novo',\r\n    EDITAR_CLIENTES = '/clientes/editar/',\r\n    LISTAR_PRESTADORES = '/prestadores',\r\n    ADICIONAR_PRESTADORES = '/prestadores/novo',\r\n    EDITAR_PRESTADORES = '/prestadores/editar/',\r\n    LISTAR_OCORRENCIAS = '/ocorrencias',\r\n    NOVA_OCORRENCIA = '/ocorrencias/nova'\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Prestador } from 'src/app/model/vo/prestador';\r\nimport { environment } from 'src/environments/environment';\r\nimport Utils from 'src/app/utils/utils';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PrestadorService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    BASE_URL: string = Utils.makeURLRequest(\"/prestador\");\r\n\r\n    data = {}\r\n\r\n    // Headers\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    }\r\n\r\n    \r\n    read(): Observable<Prestador[]> {\r\n        return this.httpClient.get<Prestador[]>(this.BASE_URL).pipe(retry(2), catchError(this.handleError))\r\n    }\r\n\r\n    readByID(id: number): Observable<Prestador> {\r\n      const url = `${this.BASE_URL}/${id}`;\r\n      return this.httpClient.get<Prestador>(url, this.httpOptions).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    create(prestador: Prestador): Observable<Prestador> {\r\n      this.data = this.parseData(prestador);      \r\n      return this.httpClient.post<any>(this.BASE_URL, this.data, this.httpOptions).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    update(prestador: Prestador): Observable<Prestador> {\r\n      return this.httpClient.put<Prestador>(this.BASE_URL, prestador, this.httpOptions).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    delete(id: number): Observable<{}> {\r\n      const url = `${this.BASE_URL}/${id}`; \r\n      console.log(url)\r\n      return this.httpClient.delete(url, this.httpOptions).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    private parseData(prestador: Prestador): any{\r\n       let data = {\r\n        \"antenista\": prestador.antenista,\r\n        \"bairro\": prestador.endereco?.bairro,\r\n        \"categoriaCnh\": prestador.categoriaCnh,\r\n        \"cep\": prestador.endereco?.cep,\r\n        \"cidade\": prestador.endereco?.cidade,\r\n        \"codAgencia\": prestador.contaBancaria?.codAgencia,\r\n        \"codBanco\": prestador.contaBancaria?.codBanco,\r\n        \"codigoUsuarioAlteracao\": 0,\r\n        \"codigoUsuarioInclusao\": 0,\r\n        \"complemento\": \"string\",\r\n        \"conta\": prestador.contaBancaria?.conta,\r\n        \"digito\": prestador.contaBancaria?.digito,\r\n        \"emailPrestador\": prestador.emailPrestador,\r\n        \"escoltaArmado\": prestador.escoltaArmado,\r\n        \"estado\": prestador.endereco?.estado,\r\n        \"fotoPrestador\": \"\",\r\n        \"logradouro\": prestador.endereco?.logradouro,\r\n        \"nomePrestador\": prestador.nomePrestador,\r\n        \"nomeVeiculo\": \" \",\r\n        \"numCnh\": prestador.numCnh,\r\n        \"numCpf\": prestador.numCpf,\r\n        \"numRg\" : prestador.numRg,\r\n        \"numero\": prestador.endereco?.numero,\r\n        \"observacoes\" : \"\",\r\n        \"pais\": prestador.endereco?.pais,\r\n        \"regSinistro\" : prestador.regSinistro,\r\n        \"situacaoPrestador\" : \"ATIVO\",\r\n        \"telefonePrestador\" : prestador.telefonePrestador\r\n       }       \r\n       console.log(JSON.parse(JSON.stringify(data)));\r\n       return data;\r\n    }\r\n\r\n    // Manipulação de erros\r\n    handleError(error: HttpErrorResponse) {\r\n      let errorMessage = '';\r\n      if (error.error instanceof ErrorEvent) {      \r\n          errorMessage =  error.error.message      \r\n      } else {  \r\n          errorMessage =  error.message       \r\n      }    \r\n      return throwError(errorMessage);\r\n    }\r\n\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ComboService } from 'src/app/services/combos/combo.service';\r\nimport { PrestadorService } from 'src/app/services/prestadores/prestador-service';\r\nimport {MessageService} from 'primeng/api';\r\nimport  MessageUtils from 'src/app/utils/message-util';\r\nimport { CommomService } from 'src/app/services/commons/common.service';\r\nimport { NavigationEnum } from 'src/app/model/enums/navigation.enum';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Prestador } from 'src/app/model/vo/prestador';\r\nimport { Endereco } from 'src/app/model/vo/endereco';\r\nimport { DadosBancarios } from 'src/app/model/vo/dados-bancarios';\r\nimport { ClienteService } from 'src/app/services/clientes/cliente-service';\r\nimport { Cliente } from 'src/app/model/vo/cliente';\r\n\r\n\r\n@Component({\r\n  selector: 'adicionar-cliente',\r\n  templateUrl: './adicionar-cliente.component.html',\r\n  styleUrls: ['./adicionar-cliente.component.css'],\r\n  providers: [MessageService]\r\n})\r\nexport class AdicionarClienteComponent implements OnInit{\r\n    \r\n\r\n    tipoPessoa = [{}];\r\n\r\n    tipoPessoaSelecionada = 1;\r\n\r\n    cliente: Cliente = {}\r\n\r\n    ngOnInit() {\r\n        this.tipoPessoa = this.comboService.getTipoPessoa();\r\n    }\r\n\r\n    constructor(\r\n        private messageService: MessageService, \r\n        private commomService: CommomService, \r\n        private comboService: ComboService, \r\n        private clienteService: ClienteService\r\n     ) { }\r\n\r\n\r\n    salvar(form : NgForm){\r\n        this.cliente = this.parseData(form);\r\n        this.adicionarCliente(form);\r\n    }\r\n    \r\n    cancelar(){\r\n       this.commomService.navigate(NavigationEnum.LISTAR_CLIENTES)\r\n    }\r\n\r\n    tipoPessoaChange(event: any){\r\n        this.tipoPessoaSelecionada = event.value;\r\n    }\r\n\r\n    private adicionarCliente(form: NgForm){\r\n        this.clienteService.create(this.cliente).subscribe((data: any) => {\r\n            this.messageService.add(MessageUtils.onSuccessMessage(\"O cliente foi cadastrado com sucesso\"));       \r\n          },error => {\r\n            this.messageService.add(MessageUtils.onErrorMessage(error));        \r\n          },() => {\r\n            this.limpar(form);\r\n          } \r\n        );      \r\n       }\r\n\r\n    private parseData(form: NgForm) : Cliente{\r\n        let cliente: Cliente = {};\r\n        cliente.contaBancaria = this.getDadosBancarios(form);\r\n        cliente.emailCliente = form.value.email;\r\n        cliente.endereco = this.getDadosEndereco(form);        \r\n        cliente.informacaoContrato = form.value.informacaoContrato\r\n        cliente.nomeCliente = form.value.nome\r\n        cliente.nomeResponsavel = form.value.nomeResponsavel;\r\n        cliente.numCpfCnpj = form.value.tipoPessoa == 1 ? form.value.cpf : form.value.cnpj;\r\n        cliente.numInscricaoEstadual = form.value.numInscricaoEstadual;\r\n        cliente.observacoesGerais = form.value.observacoes;\r\n        cliente.telefoneCliente = form.value.telefone;\r\n        cliente.tipoPessoa = form.value.tipoPessoa;\r\n        return cliente;  \r\n     }\r\n\r\n     private getDadosEndereco(form: NgForm): Endereco{\r\n        let endereco: Endereco = {};\r\n        endereco.logradouro = form.value.endereco\r\n        endereco.numero = form.value.numero\r\n        endereco.cidade = form.value.cidade\r\n        endereco.bairro = form.value.bairro\r\n        endereco.cep = form.value.cep\r\n        endereco.estado = form.value.estado;\r\n        endereco.pais = \"BRASIL\"\r\n        return endereco;\r\n     }\r\n  \r\n     private getDadosBancarios(form: NgForm): DadosBancarios{\r\n       let contaBancaria: DadosBancarios = {};\r\n       contaBancaria.codBanco = form.value.banco;\r\n       contaBancaria.codAgencia = form.value.agencia;\r\n       contaBancaria.conta = form.value.conta;\r\n       contaBancaria.digito = 1\r\n       return contaBancaria;\r\n     }\r\n  \r\n     private limpar(form: NgForm){\r\n        form.resetForm(); \r\n     }\r\n}","<div class=\"container\">\r\n    <p-table>\r\n        <ng-template pTemplate=\"caption\">\r\n            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                <h5 class=\"p-m-0\">Cadastro de Clientes</h5>        \r\n            </div>\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n    \r\n<div class=\"container\" style=\"margin-top: 15px;\">\r\n\r\n    <form id=\"novo-cliente\" autocomplete=\"off\" #cliente=\"ngForm\" (ngSubmit)=\"salvar(cliente)\">\r\n\r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"nomePrestador\">Nome</label>\r\n                <input type=\"text\" name=\"nome\" pInputText id=\"nomePrestador\" #nome=\"ngModel\" autofocus ngModel required minlength=\"15\"/>\r\n                <small class=\"p-error\" *ngIf=\"nome.hasError('required') && nome.dirty\">* O campo Nome é obrigatório.</small>\r\n                <small class=\"p-error\" *ngIf=\"nome.hasError('minlength') && nome.dirty\">* Informe o Nome Completo.</small>\r\n            </div>        \r\n        </div>\r\n\r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"rg\">Nome Responsável</label>\r\n                <input type=\"text\" name=\"nomeResponsavel\" pInputText id=\"nomeResponsavel\" #nomeResponsavel=\"ngModel\" autofocus ngModel required minlength=\"15\"/>\r\n                <small class=\"p-error\" *ngIf=\"nomeResponsavel.hasError('required') && nomeResponsavel.dirty\">* O campo Nome é obrigatório.</small>\r\n                <small class=\"p-error\" *ngIf=\"nomeResponsavel.hasError('minlength') && nomeResponsavel.dirty\">* Informe o Nome Completo.</small>           \r\n            </div>      \r\n        </div>\r\n\r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"rg\">Informações do Contrato</label>\r\n                <input type=\"text\" name=\"informacaoContrato\" pInputText id=\"informacaoContrato\" #informacaoContrato=\"ngModel\" autofocus ngModel required minlength=\"15\"/>\r\n                <small class=\"p-error\" *ngIf=\"informacaoContrato.hasError('required') && informacaoContrato.dirty\">* O campo Nome é obrigatório.</small>                \r\n            </div>      \r\n        </div>\r\n        \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"tipoPessoa\">Tipo Pessoa</label>              \r\n                <p-dropdown [options]=\"tipoPessoa\" name=\"tipoPessoa\" placeholder=\"Selecione\" [(ngModel)]=\"tipoPessoaSelecionada\" (onChange)=\"tipoPessoaChange($event)\"></p-dropdown>        \r\n            </div>\r\n            \r\n            <div class=\"p-field p-col\" *ngIf=\"tipoPessoaSelecionada == 1\">\r\n                <label for=\"cpf\">CPF</label>              \r\n                <p-inputMask id=\"cpf\" name=\"cpf\" mask=\"999.999.999-99\" ngModel [required]=\"true\" #cpf=\"ngModel\"></p-inputMask>\r\n                <small class=\"p-error\" *ngIf=\"cpf.hasError('required') && cpf.dirty\">* O campo CPF é obrigatório.</small>\r\n            </div>\r\n\r\n            <div class=\"p-field p-col\" *ngIf=\"tipoPessoaSelecionada == 2\">\r\n                <label for=\"cpf\">CNPJ</label>              \r\n                <p-inputMask id=\"cpf\" name=\"cnpj\" mask=\"99.999.999/9999-99\" ngModel [required]=\"true\" #cnpj=\"ngModel\"></p-inputMask>\r\n                <small class=\"p-error\" *ngIf=\"cnpj.hasError('required') && cnpj.dirty\">* O campo CPF é obrigatório.</small>\r\n            </div>\r\n\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"numInscricaoEstadual\">Inscrição Estatudal</label>              \r\n                <p-inputNumber id=\"numInscricaoEstadual\" name=\"numInscricaoEstadual\" mode=\"decimal\" [useGrouping]=\"false\" ngModel></p-inputNumber>\r\n            </div> \r\n            \r\n        </div>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field  p-col-9\">\r\n                <label for=\"name\">Endereço</label>\r\n                <input type=\"text\" name=\"endereco\" pInputText id=\"endereco\"   ngModel/>      \r\n            </div>\r\n            <div class=\"p-field  p-col-3\">\r\n                <label for=\"numero\">Número</label>\r\n                <input type=\"text\"  name=\"numero\" pInputText id=\"numero\"  ngModel />      \r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col-5\">\r\n                <label for=\"cidade\">Cidade</label>              \r\n                <input type=\"text\" name=\"cidade\" pInputText id=\"cidade\" ngModel />  \r\n            </div>\r\n    \r\n            <div class=\"p-field p-col-4\">\r\n                <label for=\"bairro\">Bairro</label>              \r\n                <input type=\"text\" name=\"bairro\" pInputText id=\"bairro\" ngModel/>  \r\n            </div>\r\n            \r\n            <div class=\"p-field p-col-2\">\r\n                <label for=\"cep\">CEP</label>\r\n                <p-inputMask id=\"cep\" name=\"cep\" mask=\"99999-999\" ngModel></p-inputMask>\r\n            </div>        \r\n            \r\n            <div class=\"p-field p-col\">\r\n              <label for=\"estado\">Estado</label>\r\n              <input type=\"text\" name=\"estado\" pInputText id=\"estado\" ngModel/>  \r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"banco\">Banco</label>\r\n                <p-inputNumber id=\"banco\" name=\"banco\" mode=\"decimal\" [useGrouping]=\"false\" ngModel></p-inputNumber>            \r\n            </div>\r\n    \r\n            <div class=\"p-field p-col\"> \r\n                <label for=\"agencia\">Agência</label>              \r\n                <p-inputNumber id=\"agencia\" name=\"agencia\" mode=\"decimal\" [useGrouping]=\"false\" ngModel></p-inputNumber> \r\n            </div>\r\n    \r\n            <div class=\"p-field p-col\">\r\n                <label for=\"conta\">Conta</label>              \r\n                <p-inputNumber id=\"conta\" name=\"conta\" mode=\"decimal\" [useGrouping]=\"false\" ngModel></p-inputNumber>\r\n            </div>        \r\n        </div>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col-3\">\r\n                <label for=\"telefone\">Telefone</label>\r\n                <p-inputMask id=\"telefone\" name=\"telefone\" mask=\"(99) 99999-9999\" ngModel></p-inputMask>\r\n            </div>\r\n    \r\n            <div class=\"p-field p-col\">\r\n                <label for=\"email\">E-mail</label>              \r\n                <input type=\"text\" name=\"email\" pInputText id=\"email\" ngModel>  \r\n            </div>     \r\n        </div>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"email\">Observações</label>              \r\n                <textarea name=\"observacoes\" [rows]=\"5\" [cols]=\"30\" pInputTextarea ngModel></textarea>\r\n            </div>     \r\n        </div>\r\n    \r\n    \r\n        <p-divider></p-divider>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid  p-jc-end\">\r\n            <div class=\"p-field p-col-2\">\r\n                <button pButton pRipple label=\"Cancelar\" icon=\"pi pi-times\" class=\"p-button-danger\" (click)=\"cancelar()\"></button> \r\n            </div>  \r\n    \r\n            <div class=\"p-field p-col-2\">\r\n                <button pButton pRipple label=\"Salvar\" icon=\"pi pi-check\" [disabled]=\"!cliente.valid\" class=\"p-button-success\"></button> \r\n            </div>       \r\n        </div>\r\n    \r\n    </form>\r\n    \r\n</div>\r\n\r\n<p-toast position=\"top-right\"></p-toast>","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Ocorrencia } from 'src/app/model/vo/ocorrencia';\r\nimport { OcorrenciaService } from 'src/app/services/ocorrencias/ocorrencia-service';\r\nimport MessageUtils from 'src/app/utils/message-util';\r\n\r\n@Component({\r\n  selector: 'app-ocorrencias',\r\n  templateUrl: './ocorrencias.component.html',\r\n  styleUrls: ['./ocorrencias.component.scss'],\r\n  providers: [MessageService]\r\n})\r\nexport class OcorrenciasComponent implements OnInit {\r\n\r\n  dialog: boolean = false;\r\n\r\n  ocorrencia: Ocorrencia = {};\r\n\r\n  ocorrencias: Ocorrencia[] = [];\r\n\r\n\r\n  constructor(private messageService: MessageService, private ocorrenciaService: OcorrenciaService) { }\r\n  \r\n\r\n  ngOnInit(): void {\r\n    this.listarOcorrencias()\r\n  }\r\n\r\n  openNew(){\r\n    this.ocorrencia = {};\r\n    this.dialog = true;\r\n  };\r\n\r\n  listarOcorrencias(){\r\n    this.ocorrenciaService.read().subscribe(\r\n      (data: Ocorrencia[]) => {\r\n        this.ocorrencias = data;\r\n        console.log(data)\r\n      }, error => {\r\n        this.messageService.add(MessageUtils.onErrorMessage(error));        \r\n      } \r\n    );\r\n  }\r\n\r\n}\r\n","<p-table #dt [value]=\"ocorrencias\" [rows]=\"10\" [paginator]=\"ocorrencias.length > 0\" [rowHover]=\"true\" dataKey=\"id\">\r\n\r\n    <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n            <h5 class=\"p-m-0\">Lista de ocorrências</h5>\r\n            <span class=\"p-input-icon-left\">\r\n              <button pButton pRipple label=\"Novo\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" (click)=\"openNew()\"></button>\r\n            </span>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"header\" >\r\n        <tr>\r\n            <th pSortableColumn=\"id\" style=\"text-align: center;\">Numero<p-sortIcon field=\"id\"></p-sortIcon></th>\r\n            <th pSortableColumn=\"status\" style=\"text-align: center;\">Status <p-sortIcon field=\"status\"></p-sortIcon></th>\r\n            <th pSortableColumn=\"nome\" style=\"text-align: center;\">Abertura <p-sortIcon field=\"nome\"></p-sortIcon></th>\r\n            <th pSortableColumn=\"nome\" style=\"text-align: center;\">Fechamento <p-sortIcon field=\"nome\"></p-sortIcon></th>\r\n            <th style=\"text-align: center;\">Ações</th>\r\n          </tr>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"body\" let-ocorrencia *ngIf=\"!ocorrencias.length\">\r\n        <tr>\r\n            <td style=\"text-align: center;\">{{ocorrencia.idOcorrencia}}</td>\r\n            <td style=\"text-align: center;\">{{ocorrencia.statusOcorrencia}}</td>\r\n            <td style=\"text-align: center;\">14/05/2021</td>\r\n            <td style=\"text-align: center;\">14/05/2021</td>\r\n            <td style=\"text-align: center;\" >\r\n                <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success p-mr-2\" ></button>\r\n                <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\" ></button>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n\r\n</p-table>","import { Component, OnInit } from \"@angular/core\";\r\nimport { MessageService } from \"primeng/api\";\r\nimport { Prestador } from \"src/app/model/vo/prestador\";\r\nimport { PrestadorService } from \"src/app/services/prestadores/prestador-service\";\r\n\r\n@Component({\r\n    selector: 'dashboard-component',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.css'],\r\n    providers: [MessageService]\r\n  })\r\n  export class DashboardComponent implements OnInit{\r\n    \r\n    prestadoresData: any;\r\n\r\n    clientesData: any;\r\n\r\n    usuariosData: any;\r\n\r\n    ocorrenciasData: any;\r\n\r\n    options: any;\r\n\r\n    prestadores: Prestador[] = [];\r\n\r\n    constructor(\r\n      private prestadorService: PrestadorService\r\n    ){ }\r\n\r\n    ngOnInit() {\r\n      this.prestadoresData = {\r\n        labels: [''],\r\n        datasets: [\r\n            {\r\n                label: 'Ativos',\r\n                backgroundColor: '#0056b3',\r\n                data: [2841]\r\n            },\r\n            {\r\n                label: 'Inativos',\r\n                backgroundColor: '#E7E9ED',\r\n                data: [2813]\r\n            }\r\n        ]\r\n     };\r\n\r\n     this.clientesData = {\r\n      labels: [''],\r\n      datasets: [\r\n          {\r\n              label: 'Ativos',\r\n              backgroundColor: '#42A5F5',\r\n              data: [2500]\r\n          },\r\n          {\r\n              label: 'Inativos',\r\n              backgroundColor: '#FFA726',\r\n              data: [2130]\r\n          }\r\n      ]\r\n   };\r\n\r\n   this.usuariosData = {\r\n    labels: [''],\r\n    datasets: [\r\n        {\r\n            label: 'Ativos',\r\n            backgroundColor: '#149b58',\r\n            data: [3230]\r\n        },\r\n        {\r\n            label: 'Inativos',\r\n            backgroundColor: '#FFCE56',\r\n            data: [1500]\r\n        }\r\n    ]\r\n  };\r\n\r\n  this.ocorrenciasData = {\r\n    labels: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n    datasets: [\r\n        {\r\n            label: 'Ocorrências Abertas',\r\n            data: [65, 59, 80, 81, 56, 55, 40,80, 100, 0, 123, 144],\r\n            fill: false,\r\n            borderColor: '#ff5131'\r\n        },\r\n        {\r\n            label: 'Ocorrências Fechadas',\r\n            data: [28, 48, 40, 19, 86, 27, 90,56, 55, 40,80, 5],\r\n            fill: true,\r\n            borderColor: '#FFCE56',\r\n            backgroundColor: 'rgba(255,167,38,0.2)'\r\n        }\r\n    ]\r\n}\r\n\r\n  this.options = {\r\n    title: {\r\n        display: false                   \r\n    },\r\n    legend: {\r\n        position: 'bottom'\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  \r\n  \r\n\r\n\r\n  }","<div class=\"container\">\r\n    <p-table>\r\n        <ng-template pTemplate=\"caption\">\r\n            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                <h5 class=\"p-m-0\">Dashboard</h5>        \r\n            </div>\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n\r\n<div class=\"container\" style=\"margin-top: 15px;\">\r\n    <div class=\"p-grid\">\r\n        <div class=\"p-col\">\r\n            <p-card header=\"Ocorrências\" [style]=\"{'border-top': '5px solid #0056b3' }\">\r\n                <div class=\"p-grid\">\r\n                    <div class=\"p-col\">\r\n                        <p-chart type=\"line\" width=\"100%\" height=\"300px\" [data]=\"ocorrenciasData\" [options]=\"options\"></p-chart>                        \r\n                    </div>\r\n                </div>         \r\n            </p-card>\r\n        </div>            \r\n    </div>   \r\n\r\n    <div class=\"p-grid\">\r\n        <div class=\"p-col\">\r\n            <p-card header=\"Prestadores\" [style]=\"{'border-top': '5px solid #0056b3' }\">\r\n                <div class=\"p-grid\">\r\n                    <div class=\"p-col\">\r\n                        <p-chart type=\"bar\" width=\"100%\" height=\"300px\" [data]=\"prestadoresData\" [options]=\"options\"></p-chart>\r\n                    </div>\r\n                </div>         \r\n            </p-card>            \r\n        </div>\r\n\r\n        <div class=\"p-col\">\r\n            <p-card header=\"Clientes\" [style]=\"{'border-top': '5px solid #42A5F5' }\">\r\n                    <div class=\"p-grid\">\r\n                        <div class=\"p-col\">\r\n                            <p-chart type=\"bar\" width=\"100%\" height=\"300px\" [data]=\"clientesData\" [options]=\"options\"></p-chart>\r\n                        </div>\r\n                    </div>            \r\n            </p-card>            \r\n        </div>\r\n\r\n        <div class=\"p-col\">\r\n            <p-card header=\"Usuários\" [style]=\"{'border-top': '5px solid #149b58' }\">\r\n                <div class=\"p-grid\">\r\n                    <div class=\"p-col\">\r\n                        <p-chart type=\"bar\" width=\"100%\" height=\"300px\" [data]=\"usuariosData\" [options]=\"options\"></p-chart>\r\n                    </div>\r\n                </div>           \r\n            </p-card>            \r\n        </div>\r\n     </div>     \r\n</div>\r\n\r\n\r\n\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Prestador } from 'src/app/model/vo/prestador';\r\nimport { environment } from 'src/environments/environment';\r\nimport Utils from 'src/app/utils/utils';\r\nimport { Cliente } from 'src/app/model/vo/cliente';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ClienteService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    BASE_URL: string = Utils.makeURLRequest(\"/cliente\");\r\n\r\n    data = {}\r\n\r\n    // Headers\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    }\r\n\r\n    \r\n    read(): Observable<Cliente[]> {\r\n        return this.httpClient.get<Cliente[]>(this.BASE_URL).pipe(retry(2), catchError(this.handleError))\r\n    }\r\n\r\n    readByID(id: number): Observable<Cliente> {\r\n      const url = `${this.BASE_URL}/${id}`;\r\n      return this.httpClient.get<Cliente>(url, this.httpOptions).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    create(cliente: Cliente): Observable<Cliente> {\r\n      this.data = this.parseData(cliente);      \r\n      return this.httpClient.post<any>(this.BASE_URL, this.data, this.httpOptions).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    update(cliente: Cliente): Observable<Cliente> {\r\n      const url = `${this.BASE_URL}/${cliente.idCliente}`;\r\n      this.data = this.parseData(cliente); \r\n      return this.httpClient.put<Cliente>(url, this.data, this.httpOptions).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    delete(id: number): Observable<{}> {\r\n      const url = `${this.BASE_URL}/${id}`;       \r\n      return this.httpClient.delete(url, this.httpOptions).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    private parseData(cliente: Cliente): any{\r\n       let data = {\r\n        \"codigoUsuarioAlteracao\": 0,\r\n        \"codigoUsuarioInclusao\": 0,\r\n        \"contaBacaria\": cliente.contaBancaria,\r\n        \"emailCliente\": cliente.emailCliente,\r\n        \"endereco\" : cliente.endereco,\r\n        \"informacaoContrato\": cliente.informacaoContrato,\r\n        \"nomeCliente\" : cliente.nomeCliente,\r\n        \"nomeResponsavel\": cliente.nomeResponsavel,\r\n        \"numCpfCnpj\" : cliente.numCpfCnpj,\r\n        \"observacoesGerais\": cliente.observacoesGerais,\r\n        \"situacaoCliente\" : \"ATIVO\",\r\n        \"telefoneCliente\" : cliente.telefoneCliente,\r\n        \"tipoPessoa\" : cliente.tipoPessoa\r\n       }\r\n       console.log(JSON.parse(JSON.stringify(data)));\r\n       return data;\r\n    }\r\n\r\n    // Manipulação de erros\r\n    handleError(error: HttpErrorResponse) {\r\n      let errorMessage = '';\r\n      if (error.error instanceof ErrorEvent) {      \r\n          errorMessage =  error.error.message      \r\n      } else {  \r\n          errorMessage =  error.message       \r\n      }    \r\n      return throwError(errorMessage);\r\n    }\r\n\r\n\r\n}","import { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { retry,  catchError } from \"rxjs/operators\";\r\nimport { Ocorrencia } from \"src/app/model/vo/ocorrencia\";\r\nimport Utils from \"src/app/utils/utils\";\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class OcorrenciaService{\r\n\r\n    data = {}\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    BASE_URL: string = Utils.makeURLRequest(\"/ocorrencias\");\r\n\r\n    // Headers\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    }\r\n\r\n    \r\n    read(): Observable<Ocorrencia[]> {\r\n        return this.httpClient.get<Ocorrencia[]>(this.BASE_URL).pipe(retry(2), catchError(this.handleError))\r\n    }\r\n\r\n    create(prestador: Ocorrencia): Observable<Ocorrencia> {\r\n        this.data = this.parseData(prestador);      \r\n        return this.httpClient.post<any>(this.BASE_URL, this.data, this.httpOptions).pipe(catchError(this.handleError));\r\n      }\r\n\r\n    // Manipulação de erros\r\n    handleError(error: HttpErrorResponse) {\r\n        let errorMessage = '';\r\n        if (error.error instanceof ErrorEvent) {      \r\n            errorMessage =  error.error.message      \r\n        } else {  \r\n            errorMessage =  error.message       \r\n        }    \r\n        return throwError(errorMessage);\r\n      }\r\n\r\n      private parseData(prestador: Ocorrencia): any{\r\n        let data = {\r\n        }       \r\n        console.log(JSON.parse(JSON.stringify(data)));\r\n        return data;\r\n     }\r\n}","<app-navbar *ngIf=\"exibindoNavbar()\"></app-navbar>\r\n<nav class=\"navbar-class\" *ngIf=\"!exibindoNavbar()\">\r\n    <div class=\"ui-g\" style=\"height: 80px !important;\">\r\n      <div class=\"ui-g-12\" >\r\n        <p-menubar>\r\n          <ng-template pTemplate=\"start\">\r\n            <br><br>               \r\n          </ng-template>\r\n          <ng-template pTemplate=\"end\">            \r\n        </ng-template>\r\n      </p-menubar>\r\n      </div>   \r\n  </div>\r\n</nav>\r\n\r\n\r\n<section>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</section>\r\n\r\n<footer class=\"py-5 bg-footer\">\r\n  <div class=\"container\">\r\n    <p class=\"m-0 text-center text-white\">Copyright &copy; 2021</p>\r\n  </div>\r\n</footer>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommomService } from './services/commons/common.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  \r\n  title = 'onsystem-app';\r\n\r\n  isLogin = false;\r\n\r\n  constructor(  \r\n    private commomService: CommomService\r\n  ){}\r\n  \r\n  exibindoNavbar() {\r\n    let route = this.commomService.getRoute();\r\n    return route !== '/login';\r\n  }\r\n\r\n}\r\n","import { DadosBancarios } from \"./dados-bancarios\";\r\nimport { Endereco } from \"./endereco\";\r\n\r\nexport class Prestador {\r\n  idPrestador?: number = 0;\r\n  contaBancaria?: DadosBancarios = {};\r\n  endereco?: Endereco = {};\r\n  nomePrestador?: string = \"\";\r\n  numCpf?: string= \"\";\r\n  numRg?: string= \"\";\r\n  numCnh?: string= \"\";\r\n  categoriaCnh?: string = \"\";\r\n  telefonePrestador?: string = \"\";\r\n  emailPrestador?: string = \"\";\r\n  antenista?: boolean;\r\n  regSinistro?: boolean;\r\n  escoltaArmado?: boolean;\r\n  observacoes?: string = \"\";\r\n  fotoPrestador?: string = \"\";\r\n  situacaoPrestador?: string = \"\";\r\n  codigoUsuarioInclusao?: number = 0;\r\n  dataInclusao?: Date;\r\n  codigoUsuarioAlteracao?: number = 0;\r\n  dataAlteracao?: string  = \"\";\r\n}\r\n","<div class=\"container\" style=\"margin-top:15px;\">\r\n    <div class=\"p-grid vertical-container\">  \r\n        <div class=\"p-col-4 p-as-center\">\r\n\r\n        </div>          \r\n        <div class=\"p-col-4 p-as-center\">\r\n            <div class=\"box\">\r\n                <form id=\"novo-cliente\" autocomplete=\"off\" #cliente=\"ngForm\">\r\n                    <p-card>\r\n                        <ng-template pTemplate=\"header\">\r\n                            <p-table>\r\n                                <ng-template pTemplate=\"caption\">\r\n                                    <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                                        <h5 class=\"p-m-0\">OnSystem - Faça seu Login</h5>        \r\n                                    </div>\r\n                                </ng-template>\r\n                            </p-table>\r\n                        </ng-template>\r\n                            \r\n                            <div class=\"p-col-12 p-d-flex-12  p-ai-center p-jc-center\">\r\n                                <div class=\"p-fluid\">\r\n                                    <div class=\"p-field\">\r\n                                        <label for=\"username\">Usuário</label>\r\n                                        <div class=\"p-inputgroup\">\r\n                                            <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\r\n                                            <input type=\"text\" pInputText ngModel name=\"username\" #username=\"ngModel\" placeholder=\"Username\">         \r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"p-field\">\r\n                                        <label for=\"password\">Senha</label>\r\n                                        <div class=\"p-inputgroup\">\r\n                                            <span class=\"p-inputgroup-addon\"><i class=\"pi pi-ellipsis-h\"></i></span>\r\n                                            <input type=\"password\" pInputText ngModel name=\"password\" #password=\"ngModel\" placeholder=\"Senha\">         \r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"p-field\">\r\n                                        <button pButton pRipple label=\"Entrar\"  class=\"p-button-success\"></button>\r\n                                    </div>\r\n                                    \r\n                                    <div class=\"p-field\">\r\n                                        <button pButton pRipple label=\"Esqueci a Senha\" class=\"p-button-danger\"></button> \r\n                                    </div>\r\n                                </div>\r\n                            </div>                            \r\n                    </p-card>\r\n                </form> \r\n            </div>\r\n        </div>  \r\n        <div class=\"p-col-4 p-as-center\">\r\n            \r\n        </div>          \r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'login-component',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  \r\n    items: MenuItem[] = [];\r\n\r\n    ngOnInit() {\r\n      \r\n    }\r\n\r\n    title = 'onsystem-app';\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Ocorrencia } from 'src/app/model/vo/ocorrencia';\r\nimport { ComboService } from 'src/app/services/combos/combo.service';\r\nimport { CommomService } from 'src/app/services/commons/common.service';\r\nimport { OcorrenciaService } from 'src/app/services/ocorrencias/ocorrencia-service';\r\nimport MessageUtils from 'src/app/utils/message-util';\r\n\r\n@Component({\r\n  selector: 'app-nova-ocorrencia',\r\n  templateUrl: './nova-ocorrencia.component.html',\r\n  styleUrls: ['./nova-ocorrencia.component.scss'],\r\n  providers: [MessageService]\r\n})\r\nexport class NovaOcorrenciaComponent implements OnInit {\r\n\r\n  ocorrencia: Ocorrencia = {};\r\n\r\n  ocorrencias: Ocorrencia[] = [];\r\n\r\n  itens = [{}]\r\n\r\n  \r\n  constructor(private messageService: MessageService, private commomService: CommomService, private comboService: ComboService, private ocorrenciaService: OcorrenciaService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.carregarCombos()\r\n  }\r\n\r\n  salvar(form: NgForm){\r\n    this.ocorrencia = this.parseData(form)\r\n    this.adicionarOcorrencia(form);\r\n  }\r\n\r\n private adicionarOcorrencia(form: NgForm){\r\n  this.ocorrenciaService.create(this.ocorrencia).subscribe((data: any) => {\r\n      this.messageService.add(MessageUtils.onSuccessMessage(\"Ocorrencia cadastrada\"));       \r\n    },error => {\r\n      this.messageService.add(MessageUtils.onErrorMessage(error));        \r\n    },() => {\r\n      this.limpar(form);\r\n    } \r\n  );      \r\n }\r\n\r\n private parseData(form: NgForm) : Ocorrencia{\r\n  let ocorrencia: Ocorrencia = {};\r\n  \r\n  return ocorrencia;  \r\n}\r\n\r\n private limpar(form: NgForm){\r\n  form.resetForm(); \r\n}\r\n\r\ncarregarCombos(){\r\n  this.itens = this.comboService.getSimNaoOptions()\r\n }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <p-table>\r\n        <ng-template pTemplate=\"caption\">\r\n            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                <h5 class=\"p-m-0\">Cadastro de ocorrência</h5>        \r\n            </div>\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n\r\n<div class=\"container\" style=\"margin-top: 15px;\"></div>\r\n\r\n<form id=\"nova-ocorrencia\" #ocorrencia=\"ngForm\" (ngSubmit)=\"salvar(ocorrencia)\">\r\n    \r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col\">\r\n            <label for=\"latitudeOcorrencia\">Latitude ocorrencia</label>\r\n            <input type=\"text\" name=\"nome\" pInputText id=\"latitudeOcorrencia\" required autofocus ngModel/>\r\n        </div>        \r\n    </div>\r\n\r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col\">\r\n            <label for=\"longitudeOcorrencia\">Longitude ocorrencia</label>\r\n            <input type=\"text\" name=\"nome\" pInputText id=\"longitudeOcorrencia\" required autofocus ngModel/>\r\n        </div>        \r\n    </div>\r\n\r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col\">\r\n            <label for=\"antenista\">Antenista</label>              \r\n            <p-dropdown [options]=\"itens\" name=\"antenista\" placeholder=\"Selecione\" ngModel></p-dropdown>\r\n        </div>   \r\n\r\n        <div class=\"p-field p-col\">\r\n            <label for=\"escoltaArmada\">Escolta Armada</label>              \r\n            <p-dropdown [options]=\"itens\" name=\"escoltaArmado\" placeholder=\"Selecione\" ngModel></p-dropdown>\r\n        </div>      \r\n        \r\n        <div class=\"p-field p-col\">\r\n            <label for=\"escoltaArmada\">Regulador sinistro</label>              \r\n            <p-dropdown [options]=\"itens\" name=\"reguladorSinis\" placeholder=\"Selecione\" ngModel></p-dropdown>\r\n        </div>  \r\n    </div>\r\n\r\n    <div class=\"p-fluid p-formgrid p-grid  p-jc-end\">\r\n        \r\n        <div class=\"p-field p-col-2\">\r\n            <button pButton pRipple label=\"Salvar\" icon=\"pi pi-check\" class=\"p-button-success\"></button> \r\n        </div>       \r\n    </div>\r\n\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { MenubarModule} from 'primeng/menubar';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ConfirmDialogModule} from 'primeng/confirmdialog';\r\nimport { DialogModule} from 'primeng/dialog';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { InputTextareaModule} from 'primeng/inputtextarea';\r\nimport { InputMaskModule} from 'primeng/inputmask';\r\nimport { DropdownModule} from 'primeng/dropdown';\r\nimport { TableModule } from 'primeng/table';\r\nimport { BadgeModule} from 'primeng/badge';\r\nimport { DividerModule} from 'primeng/divider';\r\nimport { CardModule} from 'primeng/card';\r\nimport {PasswordModule} from 'primeng/password';\r\nimport {PanelModule} from 'primeng/panel';\r\nimport {ChartModule} from 'primeng/chart';\r\n\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { ListarPrestadorComponent } from './components/prestadores/listar/listar-prestador.component';\r\nimport { AdicionarPrestadorComponent } from './components/prestadores/adicionar/adicionar-prestador.component';\r\nimport { OcorrenciasComponent } from './components/ocorrencias/ocorrencias.component';\r\nimport { NovaOcorrenciaComponent } from './components/ocorrencias/nova-ocorrencia/nova-ocorrencia.component';\r\nimport { EditarPrestadorComponent } from './components/prestadores/editar/editar-prestador.component';\r\nimport { AdicionarClienteComponent } from './components/clientes/adicionar/adicionar-cliente.component';\r\nimport { ListarClienteComponent } from './components/clientes/listar/listar-cliente.component';\r\nimport { EditarClienteComponent } from './components/clientes/editar/editar-cliente.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    ListarPrestadorComponent,\r\n    AdicionarPrestadorComponent,\r\n    EditarPrestadorComponent,\r\n    ListarClienteComponent,\r\n    AdicionarClienteComponent,\r\n    EditarClienteComponent,\r\n    OcorrenciasComponent,\r\n    NovaOcorrenciaComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    MenubarModule,\r\n    ToastModule,\r\n    ConfirmDialogModule,    \r\n    DialogModule,\r\n    FormsModule,\r\n    ButtonModule,\r\n    ToolbarModule,\r\n    InputTextModule,\r\n    InputNumberModule,\r\n    InputTextareaModule,\r\n    DropdownModule,\r\n    InputMaskModule,\r\n    TableModule,\r\n    BadgeModule,\r\n    DividerModule,\r\n    CardModule,\r\n    PasswordModule,\r\n    PanelModule,\r\n    ChartModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { NavigationEnum } from 'src/app/model/enums/navigation.enum';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CommomService {\r\n\r\n    constructor(private router: Router){}\r\n\r\n    getRoute() : string {\r\n        return this.router.url\r\n    }\r\n\r\n    navigate(path: String){\r\n        this.router.navigate([path])\r\n    }\r\n\r\n    navigateByUrl(url: string){\r\n        this.router.navigateByUrl(url)\r\n    }\r\n\r\n    navigateWithParams(path: String, param: any){\r\n        this.router.navigate([path, param])\r\n    }\r\n\r\n    getMenuOptions(): MenuItem[]{\r\n        return [\r\n            {\r\n              label:'Dashboard',\r\n              icon:'pi pi-fw pi-chart-line'\r\n          },\r\n          {\r\n             label:'Ocorrências',\r\n             icon:'pi pi-fw pi-map-marker',\r\n             items:[\r\n                {\r\n                   label:'Novo',\r\n                   icon:'pi pi-fw pi-plus',\r\n                   routerLink: [NavigationEnum.NOVA_OCORRENCIA]\r\n                   \r\n                },\r\n                {\r\n                   label:'Listar Ocorrências',\r\n                   icon:'pi pi-fw pi-list',\r\n                   routerLink: [NavigationEnum.LISTAR_OCORRENCIAS]\r\n                }\r\n             ]\r\n          },\r\n          {\r\n             label:'Clientes',\r\n             icon:'pi pi-fw pi-users',\r\n             items:[\r\n              {\r\n                 label:'Novo',\r\n                 icon:'pi pi-fw pi-plus',\r\n                 routerLink: [NavigationEnum.ADICIONAR_CLIENTES]\r\n              },\r\n              {\r\n                 label:'Listar Clientes',\r\n                 icon:'pi pi-fw pi-list',\r\n                 routerLink: [NavigationEnum.LISTAR_CLIENTES]\r\n              }\r\n           ]\r\n          },\r\n          {\r\n             label:'Prestadores',\r\n             icon:'pi pi-fw pi-id-card',\r\n             items:[\r\n              {\r\n                 label:'Novo',\r\n                 icon:'pi pi-fw pi-plus',\r\n                 routerLink: [NavigationEnum.ADICIONAR_PRESTADORES]\r\n              },\r\n              {\r\n                 label:'Listar Prestadores',\r\n                 icon:'pi pi-fw pi-list',\r\n                 routerLink: [NavigationEnum.LISTAR_PRESTADORES]\r\n              }\r\n           ]\r\n          },\r\n          {\r\n            label:'Usuários',\r\n            icon:'pi pi-fw pi-user',\r\n            items:[\r\n               {\r\n                  label:'Novo',\r\n                  icon:'pi pi-fw pi-plus',\r\n               },\r\n               {\r\n                  label:'Listar Usuários',\r\n                  icon:'pi pi-fw pi-list'\r\n               }\r\n            ]\r\n         },\r\n          {\r\n             label:'Logoff',\r\n             icon:'pi pi-fw pi-power-off'\r\n          }\r\n      ];\r\n    }\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { MessageService } from \"primeng/api\";\r\nimport { NavigationEnum } from \"src/app/model/enums/navigation.enum\";\r\nimport { DadosBancarios } from \"src/app/model/vo/dados-bancarios\";\r\nimport { Endereco } from \"src/app/model/vo/endereco\";\r\nimport { Prestador } from \"src/app/model/vo/prestador\";\r\nimport { ComboService } from \"src/app/services/combos/combo.service\";\r\nimport { CommomService } from \"src/app/services/commons/common.service\";\r\nimport { PrestadorService } from \"src/app/services/prestadores/prestador-service\";\r\nimport MessageUtils from \"src/app/utils/message-util\";\r\n\r\n@Component({\r\n    selector: 'editar-prestador',\r\n    templateUrl: './editar-prestador.component.html',\r\n    styleUrls: ['./editar-prestador.component.css'],\r\n    providers: [MessageService]\r\n})\r\nexport class EditarPrestadorComponent implements OnInit{\r\n\r\n   prestador: Prestador = {}\r\n\r\n   itens = [{}]\r\n    \r\n   constructor(\r\n        private messageService: MessageService, \r\n        private commomService: CommomService, \r\n        private comboService: ComboService, \r\n        private prestadorService: PrestadorService,\r\n        private route: ActivatedRoute\r\n   ) { }\r\n\r\n   ngOnInit(): void {\r\n      this.buscarPrestador();      \r\n   }  \r\n    \r\n   salvar(form: NgForm){\r\n      console.log(form); \r\n      this.prestador = this.parseData(form)\r\n      //this.adicionarPrestador(form);\r\n   }\r\n\r\n   cancelar(){\r\n      this.commomService.navigate(NavigationEnum.LISTAR_PRESTADORES)\r\n   }\r\n\r\n   private buscarPrestador(){\r\n      let idPrestador = <number> this.route.snapshot.params['id'];\r\n      this.prestadorService.readByID(idPrestador).subscribe((data: Prestador) => {\r\n           console.log(data);                  \r\n         }, error => {\r\n           this.messageService.add(MessageUtils.onErrorMessage(error));                   \r\n         } \r\n      );      \r\n   }\r\n\r\n   private carregarCombos(){      \r\n      this.itens = this.comboService.getSimNaoOptions()\r\n   }\r\n\r\n   private parseData(form: NgForm) : Prestador{\r\n      let prestador: Prestador = {};\r\n      prestador.nomePrestador = form.value.nome;\r\n      prestador.numRg = form.value.rg; \r\n      prestador.numCpf = form.value.cpf;\r\n      prestador.numCnh = form.value.cnh;\r\n      prestador.categoriaCnh = form.value.categoria;\r\n      prestador.endereco = this.getDadosEndereco(form);\r\n      prestador.contaBancaria = this.getDadosBancarios(form);\r\n      prestador.telefonePrestador = form.value.telefone;\r\n      prestador.emailPrestador = form.value.email;\r\n      prestador.antenista = form.value.antenista == 1 ? true : false;\r\n      prestador.escoltaArmado = form.value.escoltaArmada == 1 ? true : false;\r\n      prestador.regSinistro = false;\r\n      prestador.dataInclusao = new Date();\r\n      return prestador;  \r\n   }\r\n  \r\n   private getDadosEndereco(form: NgForm): Endereco{\r\n      let endereco: Endereco = {};\r\n      endereco.logradouro = form.value.endereco\r\n      endereco.numero = form.value.numero\r\n      endereco.cidade = form.value.cidade\r\n      endereco.bairro = form.value.bairro\r\n      endereco.cep = form.value.cep\r\n      endereco.estado = form.value.estado;\r\n      endereco.pais = \"BRASIL\"\r\n      return endereco;\r\n   }\r\n  \r\n   private getDadosBancarios(form: NgForm): DadosBancarios{\r\n      let contaBancaria: DadosBancarios = {};\r\n      contaBancaria.codBanco = form.value.banco;\r\n      contaBancaria.codAgencia = form.value.agencia;\r\n      contaBancaria.conta = form.value.conta;\r\n      contaBancaria.digito = 1\r\n      return contaBancaria;\r\n   }\r\n  \r\n   private limpar(form: NgForm){\r\n      form.resetForm(); \r\n   }\r\n    \r\n  }","<div class=\"container\">\r\n    <p-table>\r\n        <ng-template pTemplate=\"caption\">\r\n            <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                <h5 class=\"p-m-0\">Editar Prestador</h5>        \r\n            </div>\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n\r\n<div class=\"container\" style=\"margin-top: 15px;\">\r\n    \r\n    <form id=\"novo-prestador\" autocomplete=\"off\" #prestadorForm=\"ngForm\" (ngSubmit)=\"salvar(prestadorForm)\">\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"nomePrestador\">Nome</label>\r\n                <input type=\"text\" name=\"nome\" pInputText id=\"nomePrestador\" #nome=\"ngModel\" autofocus [(ngModel)]=\"prestador.nomePrestador\" required minlength=\"15\"/>\r\n                <small class=\"p-error\" *ngIf=\"nome.hasError('required') && nome.dirty\">* O campo Nome é obrigatório.</small>\r\n                <small class=\"p-error\" *ngIf=\"nome.hasError('minlength') && nome.dirty\">* Informe o Nome Completo.</small>\r\n            </div>        \r\n        </div>\r\n        \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"rg\">RG</label>\r\n                <p-inputNumber id=\"rg\" name=\"rg\" ngModel [useGrouping]=\"false\" [required]=\"true\" #rg=\"ngModel\"></p-inputNumber>\r\n                <small class=\"p-error\" *ngIf=\"rg.hasError('required') && rg.dirty\">* O campo RG é obrigatório.</small>            \r\n            </div>\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"cpf\">CPF</label>              \r\n                <p-inputMask id=\"cpf\" name=\"cpf\" mask=\"999.999.999-99\" ngModel [required]=\"true\" #cpf=\"ngModel\"></p-inputMask>\r\n                <small class=\"p-error\" *ngIf=\"cpf.hasError('required') && cpf.dirty\">* O campo CPF é obrigatório.</small>\r\n            </div>\r\n            <div class=\"p-field p-col\">\r\n              <label for=\"cnh\">CNH</label>\r\n              <p-inputNumber id=\"cnh\" name=\"cnh\" mode=\"decimal\" [useGrouping]=\"false\" [required]=\"true\" ngModel #cnh=\"ngModel\"></p-inputNumber>\r\n              <small class=\"p-error\" *ngIf=\"cnh.hasError('required') && cnh.dirty\">* O campo CNH é obrigatório.</small>\r\n          </div>\r\n          <div class=\"p-field p-col\">\r\n              <label for=\"categoria\">Categoria</label>\r\n              <input type=\"text\" name=\"categoria\" pInputText id=\"categoria\"  ngModel #categoria=\"ngModel\"/>\r\n              <small class=\"p-error\" *ngIf=\"categoria.hasError('required') && categoria.dirty\">* O campo Categoria é obrigatório.</small>\r\n          </div>\r\n        </div>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field  p-col-9\">\r\n                <label for=\"name\">Endereço</label>\r\n                <input type=\"text\" name=\"endereco\" pInputText id=\"endereco\"   ngModel/>      \r\n            </div>\r\n            <div class=\"p-field  p-col-3\">\r\n                <label for=\"numero\">Número</label>\r\n                <input type=\"text\"  name=\"numero\" pInputText id=\"numero\"  ngModel />      \r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col-5\">\r\n                <label for=\"cidade\">Cidade</label>              \r\n                <input type=\"text\" name=\"cidade\" pInputText id=\"cidade\" ngModel />  \r\n            </div>\r\n    \r\n            <div class=\"p-field p-col-4\">\r\n                <label for=\"bairro\">Bairro</label>              \r\n                <input type=\"text\" name=\"bairro\" pInputText id=\"bairro\" ngModel/>  \r\n            </div>\r\n            \r\n            <div class=\"p-field p-col-2\">\r\n                <label for=\"cep\">CEP</label>\r\n                <p-inputMask id=\"cep\" name=\"cep\" mask=\"99999-999\" ngModel></p-inputMask>\r\n            </div>        \r\n            \r\n            <div class=\"p-field p-col\">\r\n              <label for=\"estado\">Estado</label>\r\n              <input type=\"text\" name=\"estado\" pInputText id=\"estado\" ngModel/>  \r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"banco\">Banco</label>\r\n                <p-inputNumber id=\"banco\" name=\"banco\" mode=\"decimal\" [useGrouping]=\"false\" ngModel></p-inputNumber>            \r\n            </div>\r\n    \r\n            <div class=\"p-field p-col\"> \r\n                <label for=\"agencia\">Agência</label>              \r\n                <p-inputNumber id=\"agencia\" name=\"agencia\" mode=\"decimal\" [useGrouping]=\"false\" ngModel></p-inputNumber> \r\n            </div>\r\n    \r\n            <div class=\"p-field p-col\">\r\n                <label for=\"conta\">Conta</label>              \r\n                <p-inputNumber id=\"conta\" name=\"conta\" mode=\"decimal\" [useGrouping]=\"false\" ngModel></p-inputNumber>\r\n            </div>        \r\n        </div>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col-3\">\r\n                <label for=\"telefone\">Telefone</label>\r\n                <p-inputMask id=\"telefone\" name=\"telefone\" mask=\"(99) 99999-9999\" ngModel></p-inputMask>\r\n            </div>\r\n    \r\n            <div class=\"p-field p-col\">\r\n                <label for=\"email\">E-mail</label>              \r\n                <input type=\"text\" name=\"email\" pInputText id=\"email\" ngModel>  \r\n            </div>     \r\n        </div>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col\">\r\n                <label for=\"antenista\">Antenista</label>              \r\n                <p-dropdown [options]=\"itens\" name=\"antenista\" placeholder=\"Selecione\" ngModel></p-dropdown>\r\n            </div>   \r\n    \r\n            <div class=\"p-field p-col\">\r\n                <label for=\"escoltaArmada\">Escolta Armada</label>              \r\n                <p-dropdown [options]=\"itens\" name=\"escoltaArmada\" placeholder=\"Selecione\" ngModel></p-dropdown>\r\n            </div>       \r\n        </div>\r\n    \r\n    \r\n        <p-divider></p-divider>\r\n    \r\n        <div class=\"p-fluid p-formgrid p-grid  p-jc-end\">\r\n            <div class=\"p-field p-col-2\">\r\n                <button pButton pRipple label=\"Cancelar\" icon=\"pi pi-times\" class=\"p-button-danger\" (click)=\"cancelar()\"></button> \r\n            </div>  \r\n    \r\n            <div class=\"p-field p-col-2\">\r\n                <button pButton pRipple label=\"Salvar\" icon=\"pi pi-check\" [disabled]=\"!prestadorForm.valid\" class=\"p-button-success\"></button> \r\n            </div>       \r\n        </div>\r\n    \r\n    </form>\r\n    \r\n    </div>\r\n    \r\n    <p-toast position=\"top-right\"></p-toast>","<nav class=\"navbar-class\">\r\n  <div class=\"container\">\r\n    <div class=\"ui-g\">\r\n      <div class=\"ui-g-12\">\r\n        <p-menubar [model]=\"items\">\r\n          <ng-template pTemplate=\"start\">\r\n              <!--<img src=\"/assets/svg/logo.svg\" height=\"50\" class=\"p-mr-2\">-->\r\n          </ng-template>\r\n          <ng-template pTemplate=\"end\">\r\n            Olá seja bem vindo\r\n        </ng-template>\r\n      </p-menubar>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { NavigationEnum } from 'src/app/model/enums/navigation.enum';\r\nimport { CommomService } from 'src/app/services/commons/common.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent {\r\n\r\n   items: MenuItem[] = [];\r\n  \r\n   constructor(  \r\n    private commomService: CommomService\r\n   ){}\r\n    \r\n   ngOnInit() {\r\n    this.items = this.commomService.getMenuOptions()    \r\n   }\r\n\r\n\r\n\r\n\r\n}\r\n","export enum TipoPessoaEnum{\r\n    FÍSICA = 1,\r\n    JURÍDICA = 2    \r\n}","import { environment } from \"src/environments/environment\";\r\n\r\nexport default class Utils {\r\n    \r\n    static makeURLRequest(path: string): string { \r\n        return environment.baseUrl + path;\r\n    }  \r\n    \r\n    static leftPad(value: string, totalWidth: number) {\r\n        let retorno = value;\r\n        if(value.length < totalWidth){\r\n          var length = totalWidth - value.toString().length + 1;\r\n          retorno =  Array(length).join(0 || '0') + value;\r\n        }\r\n        return retorno;\r\n    }\r\n}","export enum SimNaoEnum{\r\n    SIM = 1,\r\n    NÃO = 2    \r\n}","import { Message } from \"primeng/api\";\r\n\r\nexport default class MessageUtils {\r\n    \r\n    static onSuccessMessage(message: string): Message { \r\n        return {severity:'success', summary: 'Operação Efetuada com Sucesso', detail: message}; \r\n    }   \r\n    \r\n    static onErrorMessage(message: string): Message { \r\n        return {severity:'error', summary: 'Ocorreu um Erro', detail: message};\r\n    } \r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ComboService } from 'src/app/services/combos/combo.service';\r\nimport { PrestadorService } from 'src/app/services/prestadores/prestador-service';\r\nimport {MessageService} from 'primeng/api';\r\nimport  MessageUtils from 'src/app/utils/message-util';\r\nimport { CommomService } from 'src/app/services/commons/common.service';\r\nimport { NavigationEnum } from 'src/app/model/enums/navigation.enum';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Prestador } from 'src/app/model/vo/prestador';\r\nimport { Endereco } from 'src/app/model/vo/endereco';\r\nimport { DadosBancarios } from 'src/app/model/vo/dados-bancarios';\r\n\r\n\r\n@Component({\r\n  selector: 'adicionar-prestador',\r\n  templateUrl: './adicionar-prestador.component.html',\r\n  styleUrls: ['./adicionar-prestador.component.css'],\r\n  providers: [MessageService]\r\n})\r\nexport class AdicionarPrestadorComponent implements OnInit{\r\n\r\n   itens = [{}]\r\n  \r\n   prestador: Prestador = {}\r\n\r\n   constructor(\r\n      private messageService: MessageService, \r\n      private commomService: CommomService, \r\n      private comboService: ComboService, \r\n      private prestadorService: PrestadorService\r\n   ) { }\r\n\r\n   ngOnInit(): void {\r\n    this.carregarCombos()\r\n   }\r\n\r\n   salvar(form: NgForm){     \r\n     this.prestador = this.parseData(form)\r\n     this.adicionarPrestador(form);\r\n    }      \r\n\r\n   cancelar(){\r\n      this.commomService.navigate(NavigationEnum.LISTAR_PRESTADORES)\r\n   }\r\n\r\n   carregarCombos(){\r\n    this.itens = this.comboService.getSimNaoOptions()\r\n   }\r\n\r\n   private adicionarPrestador(form: NgForm){\r\n    this.prestadorService.create(this.prestador).subscribe((data: any) => {\r\n        this.messageService.add(MessageUtils.onSuccessMessage(\"O prestador foi cadastrado com sucesso\"));       \r\n      },error => {\r\n        this.messageService.add(MessageUtils.onErrorMessage(error));        \r\n      },() => {\r\n        this.limpar(form);\r\n      } \r\n    );      \r\n   }\r\n\r\n   private parseData(form: NgForm) : Prestador{\r\n      let prestador: Prestador = {};\r\n      prestador.nomePrestador = form.value.nome;\r\n      prestador.numRg = form.value.rg; \r\n      prestador.numCpf = form.value.cpf;\r\n      prestador.numCnh = form.value.cnh;\r\n      prestador.categoriaCnh = form.value.categoria;\r\n      prestador.endereco = this.getDadosEndereco(form);\r\n      prestador.contaBancaria = this.getDadosBancarios(form);\r\n      prestador.telefonePrestador = form.value.telefone;\r\n      prestador.emailPrestador = form.value.email;\r\n      prestador.antenista = form.value.antenista == 1 ? true : false;\r\n      prestador.escoltaArmado = form.value.escoltaArmada == 1 ? true : false;\r\n      prestador.regSinistro = false;\r\n      prestador.dataInclusao = new Date();\r\n      return prestador;  \r\n   }\r\n\r\n   private getDadosEndereco(form: NgForm): Endereco{\r\n      let endereco: Endereco = {};\r\n      endereco.logradouro = form.value.endereco\r\n      endereco.numero = form.value.numero\r\n      endereco.cidade = form.value.cidade\r\n      endereco.bairro = form.value.bairro\r\n      endereco.cep = form.value.cep\r\n      endereco.estado = form.value.estado;\r\n      endereco.pais = \"BRASIL\"\r\n      return endereco;\r\n   }\r\n\r\n   private getDadosBancarios(form: NgForm): DadosBancarios{\r\n     let contaBancaria: DadosBancarios = {};\r\n     contaBancaria.codBanco = form.value.banco;\r\n     contaBancaria.codAgencia = form.value.agencia;\r\n     contaBancaria.conta = form.value.conta;\r\n     contaBancaria.digito = 1\r\n     return contaBancaria;\r\n   }\r\n\r\n   private limpar(form: NgForm){\r\n      form.resetForm(); \r\n   }\r\n\r\n}","<div class=\"container\">\r\n<p-table>\r\n    <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n            <h5 class=\"p-m-0\">Cadastro de Prestadores</h5>        \r\n        </div>\r\n    </ng-template>\r\n</p-table>\r\n</div>\r\n\r\n<div class=\"container\" style=\"margin-top: 15px;\">\r\n    \r\n<form id=\"novo-prestador\" autocomplete=\"off\" #prestador=\"ngForm\" (ngSubmit)=\"salvar(prestador)\">\r\n\r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col\">\r\n            <label for=\"nomePrestador\">Nome</label>\r\n            <input type=\"text\" name=\"nome\" pInputText id=\"nomePrestador\" #nome=\"ngModel\" autofocus ngModel required minlength=\"15\"/>\r\n            <small class=\"p-error\" *ngIf=\"nome.hasError('required') && nome.dirty\">* O campo Nome é obrigatório.</small>\r\n            <small class=\"p-error\" *ngIf=\"nome.hasError('minlength') && nome.dirty\">* Informe o Nome Completo.</small>\r\n        </div>        \r\n    </div>\r\n    \r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col\">\r\n            <label for=\"rg\">RG</label>\r\n            <p-inputNumber id=\"rg\" name=\"rg\" ngModel [useGrouping]=\"false\" [required]=\"true\" #rg=\"ngModel\"></p-inputNumber>\r\n            <small class=\"p-error\" *ngIf=\"rg.hasError('required') && rg.dirty\">* O campo RG é obrigatório.</small>            \r\n        </div>\r\n        <div class=\"p-field p-col\">\r\n            <label for=\"cpf\">CPF</label>              \r\n            <p-inputMask id=\"cpf\" name=\"cpf\" mask=\"999.999.999-99\" ngModel [required]=\"true\" #cpf=\"ngModel\"></p-inputMask>\r\n            <small class=\"p-error\" *ngIf=\"cpf.hasError('required') && cpf.dirty\">* O campo CPF é obrigatório.</small>\r\n        </div>\r\n        <div class=\"p-field p-col\">\r\n          <label for=\"cnh\">CNH</label>\r\n          <p-inputNumber id=\"cnh\" name=\"cnh\" mode=\"decimal\" [useGrouping]=\"false\" [required]=\"true\" ngModel #cnh=\"ngModel\"></p-inputNumber>\r\n          <small class=\"p-error\" *ngIf=\"cnh.hasError('required') && cnh.dirty\">* O campo CNH é obrigatório.</small>\r\n      </div>\r\n      <div class=\"p-field p-col\">\r\n          <label for=\"categoria\">Categoria</label>\r\n          <input type=\"text\" name=\"categoria\" pInputText id=\"categoria\"  ngModel #categoria=\"ngModel\"/>\r\n          <small class=\"p-error\" *ngIf=\"categoria.hasError('required') && categoria.dirty\">* O campo Categoria é obrigatório.</small>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field  p-col-9\">\r\n            <label for=\"name\">Endereço</label>\r\n            <input type=\"text\" name=\"endereco\" pInputText id=\"endereco\"   ngModel/>      \r\n        </div>\r\n        <div class=\"p-field  p-col-3\">\r\n            <label for=\"numero\">Número</label>\r\n            <input type=\"text\"  name=\"numero\" pInputText id=\"numero\"  ngModel />      \r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col-5\">\r\n            <label for=\"cidade\">Cidade</label>              \r\n            <input type=\"text\" name=\"cidade\" pInputText id=\"cidade\" ngModel />  \r\n        </div>\r\n\r\n        <div class=\"p-field p-col-4\">\r\n            <label for=\"bairro\">Bairro</label>              \r\n            <input type=\"text\" name=\"bairro\" pInputText id=\"bairro\" ngModel/>  \r\n        </div>\r\n        \r\n        <div class=\"p-field p-col-2\">\r\n            <label for=\"cep\">CEP</label>\r\n            <p-inputMask id=\"cep\" name=\"cep\" mask=\"99999-999\" ngModel></p-inputMask>\r\n        </div>        \r\n        \r\n        <div class=\"p-field p-col\">\r\n          <label for=\"estado\">Estado</label>\r\n          <input type=\"text\" name=\"estado\" pInputText id=\"estado\" ngModel/>  \r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col\">\r\n            <label for=\"banco\">Banco</label>\r\n            <p-inputNumber id=\"banco\" name=\"banco\" mode=\"decimal\" [useGrouping]=\"false\" ngModel></p-inputNumber>            \r\n        </div>\r\n\r\n        <div class=\"p-field p-col\"> \r\n            <label for=\"agencia\">Agência</label>              \r\n            <p-inputNumber id=\"agencia\" name=\"agencia\" mode=\"decimal\" [useGrouping]=\"false\" ngModel></p-inputNumber> \r\n        </div>\r\n\r\n        <div class=\"p-field p-col\">\r\n            <label for=\"conta\">Conta</label>              \r\n            <p-inputNumber id=\"conta\" name=\"conta\" mode=\"decimal\" [useGrouping]=\"false\" ngModel></p-inputNumber>\r\n        </div>        \r\n    </div>\r\n\r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col-3\">\r\n            <label for=\"telefone\">Telefone</label>\r\n            <p-inputMask id=\"telefone\" name=\"telefone\" mask=\"(99) 99999-9999\" ngModel></p-inputMask>\r\n        </div>\r\n\r\n        <div class=\"p-field p-col\">\r\n            <label for=\"email\">E-mail</label>              \r\n            <input type=\"text\" name=\"email\" pInputText id=\"email\" ngModel>  \r\n        </div>     \r\n    </div>\r\n\r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col\">\r\n            <label for=\"antenista\">Antenista</label>              \r\n            <p-dropdown [options]=\"itens\" name=\"antenista\" placeholder=\"Selecione\" ngModel></p-dropdown>\r\n        </div>   \r\n\r\n        <div class=\"p-field p-col\">\r\n            <label for=\"escoltaArmada\">Escolta Armada</label>              \r\n            <p-dropdown [options]=\"itens\" name=\"escoltaArmada\" placeholder=\"Selecione\" ngModel></p-dropdown>\r\n        </div>       \r\n    </div>\r\n\r\n\r\n    <p-divider></p-divider>\r\n\r\n    <div class=\"p-fluid p-formgrid p-grid  p-jc-end\">\r\n        <div class=\"p-field p-col-2\">\r\n            <button pButton pRipple label=\"Cancelar\" icon=\"pi pi-times\" class=\"p-button-danger\" (click)=\"cancelar()\"></button> \r\n        </div>  \r\n\r\n        <div class=\"p-field p-col-2\">\r\n            <button pButton pRipple label=\"Salvar\" icon=\"pi pi-check\" [disabled]=\"!prestador.valid\" class=\"p-button-success\"></button> \r\n        </div>       \r\n    </div>\r\n\r\n</form>\r\n\r\n</div>\r\n\r\n<p-toast position=\"top-right\"></p-toast>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ListarPrestadorComponent } from './components/prestadores/listar/listar-prestador.component';\r\nimport { AdicionarPrestadorComponent } from './components/prestadores/adicionar/adicionar-prestador.component';\r\nimport { OcorrenciasComponent } from './components/ocorrencias/ocorrencias.component';\r\nimport { NovaOcorrenciaComponent } from './components/ocorrencias/nova-ocorrencia/nova-ocorrencia.component';\r\nimport { EditarPrestadorComponent } from './components/prestadores/editar/editar-prestador.component';\r\nimport { AdicionarClienteComponent } from './components/clientes/adicionar/adicionar-cliente.component';\r\nimport { ListarClienteComponent } from './components/clientes/listar/listar-cliente.component';\r\nimport { EditarClienteComponent } from './components/clientes/editar/editar-cliente.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'dashboard', component: DashboardComponent},\r\n  {path: 'clientes', component: ListarClienteComponent},\r\n  {path: 'clientes/novo', component: AdicionarClienteComponent},\r\n  {path: 'clientes/editar/:id', component: EditarClienteComponent},\r\n  {path: 'prestadores', component: ListarPrestadorComponent},\r\n  {path: 'prestadores/novo', component: AdicionarPrestadorComponent},\r\n  {path: 'prestadores/editar/:id', component: EditarPrestadorComponent},\r\n  {path: 'ocorrencias', component: OcorrenciasComponent},\r\n  {path: 'ocorrencias/nova', component: NovaOcorrenciaComponent}  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}